@using  Web.Utils;

@model EditAbbonamentoUtenteInputModel

@{
    ViewData["Title"] = "Nuovo Abbonamento";
    Layout = "_LayoutClienti";
}
<partial name="_MenuCliente" model="ViewBag.IdCliente" />
@*@Html.Partial("_MenuCliente", ViewData["IdCliente"])*@


<div class="container">
    <div class="row">
        @*AGGIUNGERE ANAGRAFICA UTENTE*@
        <h2>Nuovo abbonamento @ViewBag.TipologiaAbbonamento</h2>
        <form asp-action="AddAbbonamentoToUser" asp-route-cliente="@ViewBag.ClienteUrl" asp-route-userId="@ViewBag.IdUtente" method="post">
            <input asp-for="Id" type="hidden" />
            <input asp-for="IdTipologiaAbbonamento" type="hidden" />
            <input asp-for="IdCliente" type="hidden" />
            <input asp-for="IdUtente" type="hidden" />

            @*<div class="row">
            <div class="input-field col s10">
                <select asp-for="IdTipologiaAbbonamento" asp-items="ViewBag.TipologieAbbonamenti" onchange='@if (!ViewBag.IsEditMode) { Html.Raw("applyTipoAbbonamento(event)"); } '></select>
                <label asp-for="IdTipologiaAbbonamento"></label>
                <span asp-validation-for="IdTipologiaAbbonamento" />
            </div>
        </div>*@
            <div class="row">
                <div class="input-field col s10">
                    <input id="inputDataInizioValidita" type="text" asp-for="DataInizioValidita" />
                    <label asp-for="DataInizioValidita"></label>
                    <span asp-validation-for="DataInizioValidita" />
                </div>
            </div>
            <div class="row">
                <div class="input-field col s10">
                    <input id="inputScadenza" type="text" asp-for="Scadenza" />
                    <label asp-for="Scadenza"></label>
                    <span asp-validation-for="Scadenza" />
                </div>
            </div>
            <div class="row">
                <div class="input-field col s10">
                    <input type="number" asp-for="IngressiResidui" />
                    <label asp-for="IngressiResidui"></label>
                    <span asp-validation-for="IngressiResidui" />
                </div>
            </div>
            <div class="row">
                <div class="input-field col s10">
                    <input id="inputScadenzaCertificato" type="text" asp-for="ScadenzaCertificato" />
                    <label asp-for="ScadenzaCertificato"></label>
                    <span asp-validation-for="ScadenzaCertificato" />
                </div>
            </div>
            <div class="row">
                <div class="col s10">
                    <label>
                        <input type="checkbox" asp-for="Pagato" />
                        <span>Pagato</span>
                        <span asp-validation-for="Pagato" />
                    </label>
                </div>
            </div>
            <div class="row">
                <div class="input-field col s10">
                    <button class="btn waves-effect waves-light" type="submit" name="action">
                        Salva
                        <i class="material-icons save">save</i>
                    </button>
                </div>
            </div>

        </form>
    </div>
</div>
@section Scripts{

    <script>
var i18nDate = {
    months: ['Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno', 'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'],
    monthsShort: ['Gen', 'Feb', 'Mar', 'Apr', 'Mag', 'Giu', 'Lug', 'Ago', 'Set', 'Ott', 'Nov', 'Dic'],
    weekdays: ['Domenica', 'Lunedì', 'Martedì', 'Mercoledì', 'Giovedì', 'Venerdì', 'Sabato'],
    weekdaysShort: ['Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab', 'Dom'],
    weekdaysAbbrev: ['D', 'L', 'M', 'M', 'G', 'V', 'S'],
    clear: 'Cancella',
    cancel: 'Annulla',
    today: 'Oggi'
};

var i18nTime = {
    cancel: 'Annulla',
    clear: 'Cancella',
    done: 'Ok'
};

$(document).ready(function () {
   // $('select').formSelect();

    var elemDataInizioVal = document.getElementById('inputDataInizioValidita');
    var dtInizioVal = new Date(@Model.DataInizioValidita.ToJSmsSinceEpoch());
    var elemScadenza = document.getElementById('inputScadenza');
    var dataScadenza = null;
    @if (Model.Scadenza.HasValue) {
        @: dataScadenza = new Date(@Model.Scadenza.Value.ToJSmsSinceEpoch());
    }
    var elemDataScadenzaCert = document.getElementById('inputScadenzaCertificato');
    var dataScadenzaCert = null;
    @if (Model.ScadenzaCertificato.HasValue) {
        @: dataScadenzaCert= new Date(@Model.ScadenzaCertificato.Value.ToJSmsSinceEpoch());
    }

    var datePickDataInizioVal = M.Datepicker.init(elemDataInizioVal, {
        format: "dd/mm/yyyy",
        defaultDate: dtInizioVal,
        setDefaultDate: true,
        minDate:  new Date(),
        i18n: i18nDate
    });

    var datePickDataScadenza = M.Datepicker.init(elemScadenza, {
        format: "dd/mm/yyyy",
        defaultDate: dataScadenza,
        setDefaultDate: (dataScadenza != null),
        minDate: new Date(),
        i18n: i18nDate
    });

    var datePickDataScadenzaCert = M.Datepicker.init(elemDataScadenzaCert, {
        format: "dd/mm/yyyy",
        defaultDate: dataScadenzaCert,
        setDefaultDate: (dataScadenzaCert != null),
        minDate: new Date(),
        i18n: i18nDate
    });
});
    </script>
}

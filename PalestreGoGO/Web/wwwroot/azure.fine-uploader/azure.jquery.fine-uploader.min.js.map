{"version":3,"sources":["?","../client/js/jquery-plugin.js","../client/js/jquery-dnd.js","../client/js/azure/jquery-plugin.js","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/azure/util.js","../client/js/non-traditional-common/uploader.basic.api.js","../client/js/azure/uploader.basic.js","../client/js/azure/azure.xhr.upload.handler.js","../client/js/azure/get-sas.js","../client/js/uploadsuccess.ajax.requester.js","../client/js/azure/rest/delete-blob.js","../client/js/azure/rest/put-blob.js","../client/js/azure/rest/put-block.js","../client/js/azure/rest/put-block-list.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js","../client/js/azure/uploader.js"],"names":["global","$","init","options","xformedOpts","transformVariables","newUploaderInstance","getNewUploaderInstance","uploader","addCallbacks","$el","params","uploaderType","pluginOption","namespace","charAt","toUpperCase","slice","toLowerCase","qq","FineUploader","dataStore","key","val","data","undefined","instanceToStore","option","optionVal","transformedOpts","callbacks","each","_options","prop","nonJqueryCallback","name","callbackEventTarget","exec","substring","nonJqueryCallbackRetVal","jqueryEventCallbackRetVal","originalArgs","Array","prototype","call","arguments","transformedArgs","idx","arg","push","maybeWrapInJquery","apply","this","triggerHandler","error","log","message","source","dest","xformed","arrayVals","element","inArray","pluginOptions","isPlainObject","isArray","arrayVal","arrayObjDest","merge","isValidCommand","command","type","match","delegateCommand","retVal","xformedArgs","origArgs","transformedVal","nodeType","cloneNode","fn","fineUploader","optionsOrCommand","self","selfArgs","retVals","index","el","length","jQuery","dropZoneElements","dnd","DragAndDrop","func","$callbackEl","args","fineUploaderDnd","fineUploaderAzure","endpointType","hide","style","display","attach","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","getFirstByClass","children","child","firstChild","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","getAttribute","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","Uint8Array","character","charCodeAt","level","console","isObject","variable","Object","toString","isFunction","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","newStr","nextIdxToReplace","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","override","target","sourceFn","super_","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","Storage","getItem","bind","oldFunc","context","newArgs","concat","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome14OrHigher","isCrossOriginXhrSupported","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","title","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","file","batchId","proxyGroupId","onBeforeStatusChange","onStatusChange","retrieve","optionalFilter","removeFileRef","record","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_FINALIZING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","normalizeData","fileContainer","_prepareItemsForUpload","cancel","uploadData","_uploadData","getName","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","enabled","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","uploadDataRecord","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","isResumable","hasResumeRecord","debug","pauseUpload","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","_customResumeDataStore","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setCustomResumeData","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","xhr","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadResult","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkResult","partIndex","onUploadChunkSuccess","_onUploadChunkSuccess","onResume","customResumeData","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","isInProgress","getCustomResumeData","_getCustomResumeData","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","enableAuto","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","warnBeforeUnload","filenameParam","forceMultipart","omitDefaultParams","paramsInBody","requireSuccessJson","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","jsonPayload","resetOnStatus","recordsExpireIn","resuming","customKeys","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","normalizedResponse","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","requestOverrides","uploadChunkData","overrides","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","traditional","onFinalizing","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","_getLocalStorageId","isAttemptingResume","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","getChunkSize","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","chunkingState","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","localStorageId","forEach","_getMimeType","_getPersistableData","ceil","_markNotResumable","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","azure","util","AZURE_PARAM_PREFIX","_paramNameMatchesAzureParameter","_getPrefixedParamName","getParamsAsHeaders","headerName","parseAzureError","codeTag","messageTag","domParser","DOMParser","responseDoc","parseFromString","errorTag","errorDetails","nonTraditionalBasePublicApi","setUploadSuccessParams","_uploadSuccessParamsStore","setUploadSuccessEndpoint","_uploadSuccessEndpointStore","nonTraditionalBasePrivateApi","submitSuccessRequest","successAjaxRequester","onCompleteArgs","successEndpoint","successCustomHeaders","uploadSuccess","successMethod","uploadSuccessParams","fileParams","onSuccessFromServer","successRequestResult","_failedSuccessRequestCallbacks","onFailureFromServer","UploadSuccessAjaxRequester","_getEndpointSpecificParams","sendSuccessRequest","successRequestCallback","signature","blobProperties","minFileSize","_cannedBlobNames","getBlobName","onGetBlobName","_determineBlobName","deleteBlob","_deleteBlob","blobNameOptionValue","fileExtension","blobNameToUse","blobName","relatedToCancel","deleteBlobSasUri","blobUriStore","deleteFileEndpointStore","getSasSuccess","sasUri","getSasFailure","DeleteBlob","GetSas","restRequestVerb","combineChunks","getSignedUrl","mimeType","blockIdEntries","putBlockList","determineBlobUrl","containerUrl","getBlobNameSuccess","getBlobNameFailure","getSasId","getSasXhr","determineBlobUrlSuccess","blobUrl","getSasForPutBlobOrBlock","determineBlobUrlFailure","azureError","minFileSizeForChunking","getBlobMetadata","putBlob","PutBlob","putBlock","PutBlock","PutBlockList","blockIdEntry","chunkingData","sasResponseReceived","requestPromises","blobUri","requestPromise","restVerb","bloburi","handleSuccessResponse","parsedResponse","pendingRequests","responseJson","successIndicator","failureIndicator","codes","endpoints","promises","endpointHandler","Content-Type","createBlockId","partNum","zeros","digits","paddedPartNum","btoa","blockId","createRequestBody","doc","implementation","createDocument","latestEl","latestTextEl","createTextNode","XMLSerializer","serializeToString","fileMimeType","registerXhrCallback","blockIdsXml","x-ms-blob-content-type","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","qqPath","extractDirectoryPath","droppedFiles","fileError","fullPath","isDirectory","getFilesInDirectory","entriesLeft","indexOfNameInFullPath","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","y","setupDragDrop","dropZones","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","includes","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","relatedTarget","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","placeholders","waitUntilResponse","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateDom","showThumbnails","serverScale","fileBatch","content","createDocumentFragment","map","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","update","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListEl","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":"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","file":"azure.jquery.fine-uploader.min.js","sourcesContent":[null,"/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var $el,\n        pluginOptions = [\"uploaderType\", \"endpointType\"];\n\n    function init(options) {\n        var xformedOpts = transformVariables(options || {}),\n            newUploaderInstance = getNewUploaderInstance(xformedOpts);\n\n        uploader(newUploaderInstance);\n        addCallbacks(xformedOpts, newUploaderInstance);\n\n        return $el;\n    }\n\n    function getNewUploaderInstance(params) {\n        var uploaderType = pluginOption(\"uploaderType\"),\n            namespace = pluginOption(\"endpointType\");\n\n        // If the integrator has defined a specific type of uploader to load, use that, otherwise assume `qq.FineUploader`\n        if (uploaderType) {\n            // We can determine the correct constructor function to invoke by combining \"FineUploader\"\n            // with the upper camel cased `uploaderType` value.\n            uploaderType = uploaderType.charAt(0).toUpperCase() + uploaderType.slice(1).toLowerCase();\n\n            if (namespace) {\n                return new qq[namespace][\"FineUploader\" + uploaderType](params);\n            }\n\n            return new qq[\"FineUploader\" + uploaderType](params);\n        }\n        else {\n            if (namespace) {\n                return new qq[namespace].FineUploader(params);\n            }\n\n            return new qq.FineUploader(params);\n        }\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(\"fineuploader\");\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(\"fineuploader\", data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    //the underlying Fine Uploader instance is stored in jQuery's data stored, associated with the element\n    // tied to this instance of the plug-in\n    function uploader(instanceToStore) {\n        return dataStore(\"uploader\", instanceToStore);\n    }\n\n    function pluginOption(option, optionVal) {\n        return dataStore(option, optionVal);\n    }\n\n    // Implement all callbacks defined in Fine Uploader as functions that trigger appropriately names events and\n    // return the result of executing the bound handler back to Fine Uploader\n    function addCallbacks(transformedOpts, newUploaderInstance) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(newUploaderInstance._options.callbacks, function(prop, nonJqueryCallback) {\n            var name, callbackEventTarget;\n\n            name = /^on(\\w+)/.exec(prop)[1];\n            name = name.substring(0, 1).toLowerCase() + name.substring(1);\n            callbackEventTarget = $el;\n\n            callbacks[prop] = function() {\n                var originalArgs = Array.prototype.slice.call(arguments),\n                    transformedArgs = [],\n                    nonJqueryCallbackRetVal, jqueryEventCallbackRetVal;\n\n                $.each(originalArgs, function(idx, arg) {\n                    transformedArgs.push(maybeWrapInJquery(arg));\n                });\n\n                nonJqueryCallbackRetVal = nonJqueryCallback.apply(this, originalArgs);\n\n                try {\n                    jqueryEventCallbackRetVal = callbackEventTarget.triggerHandler(name, transformedArgs);\n                }\n                catch (error) {\n                    qq.log(\"Caught error in Fine Uploader jQuery event handler: \" + error.message, \"error\");\n                }\n\n                /*jshint -W116*/\n                if (nonJqueryCallbackRetVal != null) {\n                    return nonJqueryCallbackRetVal;\n                }\n                return jqueryEventCallbackRetVal;\n            };\n        });\n\n        newUploaderInstance._options.callbacks = callbacks;\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            if (source.uploaderType !== \"basic\") {\n                xformed = { element: $el[0] };\n            }\n            else {\n                xformed = {};\n            }\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if ($.inArray(prop, pluginOptions) >= 0) {\n                pluginOption(prop, val);\n            }\n            else if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    var arrayObjDest = {};\n\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else if ($.isPlainObject(arrayVal)) {\n                        transformVariables(arrayVal, arrayObjDest);\n                        arrayVals.push(arrayObjDest);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            !command.match(/^_/) && //enforce private methods convention\n            uploader()[command] !== undefined;\n    }\n\n    // Assuming we have already verified that this is a valid command, call the associated function in the underlying\n    // Fine Uploader instance (passing along the arguments from the caller) and return the result of the call back to the caller\n    function delegateCommand(command) {\n        var xformedArgs = [],\n            origArgs = Array.prototype.slice.call(arguments, 1),\n            retVal;\n\n        transformVariables(origArgs, xformedArgs);\n\n        retVal = uploader()[command].apply(uploader(), xformedArgs);\n\n        return maybeWrapInJquery(retVal);\n    }\n\n    // If the value is an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n    function maybeWrapInJquery(val) {\n        var transformedVal = val;\n\n        // If the command is returning an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n        /*jshint -W116*/\n        if (val != null && typeof val === \"object\" &&\n           (val.nodeType === 1 || val.nodeType === 9) && val.cloneNode) {\n\n            transformedVal = $(val);\n        }\n\n        return transformedVal;\n    }\n\n    $.fn.fineUploader = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (uploader() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist on jQuery.fineUploader\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var rootDataKey = \"fineUploaderDnd\",\n        $el;\n\n    function init(options) {\n        if (!options) {\n            options = {};\n        }\n\n        options.dropZoneElements = [$el];\n        var xformedOpts = transformVariables(options);\n        addCallbacks(xformedOpts);\n        dnd(new qq.DragAndDrop(xformedOpts));\n\n        return $el;\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(rootDataKey);\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(rootDataKey, data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    function dnd(instanceToStore) {\n        return dataStore(\"dndInstance\", instanceToStore);\n    }\n\n    function addCallbacks(transformedOpts) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(new qq.DragAndDrop.callbacks(), function(prop, func) {\n            var name = prop,\n                $callbackEl;\n\n            $callbackEl = $el;\n\n            callbacks[prop] = function() {\n                var args = Array.prototype.slice.call(arguments),\n                    jqueryHandlerResult = $callbackEl.triggerHandler(name, args);\n\n                return jqueryHandlerResult;\n            };\n        });\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            xformed = {};\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            command === \"dispose\" &&\n            dnd()[command] !== undefined;\n    }\n\n    function delegateCommand(command) {\n        var xformedArgs = [], origArgs = Array.prototype.slice.call(arguments, 1);\n        transformVariables(origArgs, xformedArgs);\n        return dnd()[command].apply(dnd(), xformedArgs);\n    }\n\n    $.fn.fineUploaderDnd = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (dnd() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist in Fine Uploader's DnD module.\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery*/\n/**\n * Simply an alias for the `fineUploader` plug-in wrapper, but hides the required `endpointType` option from the\n * integrator.  I thought it may be confusing to convey to the integrator that, when using Fine Uploader in Azure mode,\n * you need to specify an `endpointType` with a value of \"azure\", and perhaps an `uploaderType` with a value of \"basic\" if\n * you want to use basic mode when uploading directly to Azure as well.  So, you can use this plug-in alias and not worry\n * about the `endpointType` option at all.\n */\n(function($) {\n    \"use strict\";\n\n    $.fn.fineUploaderAzure = function(optionsOrCommand) {\n        if (typeof optionsOrCommand === \"object\") {\n\n            // This option is used to tell the plug-in wrapper to instantiate the appropriate Azure-namespace modules.\n            optionsOrCommand.endpointType = \"azure\";\n        }\n\n        return $.fn.fineUploader.apply(this, arguments);\n    };\n\n}(jQuery));\n","/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\nqq.version = \"5.16.0\";\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    // adapted from https://stackoverflow.com/a/23278460/486979\n    supportsFolderDrop = supportsFileDrop && (function() {\n        var input = document.createElement(\"input\");\n\n        input.type = \"file\";\n        return !!(\"webkitdirectory\" in (input || document.querySelectorAll(\"input[type=file]\")[0]));\n    }());\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         * - onBeforeStatusChange(fileId): callback that is executed before the status change is broadcast\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status,\n                    file: spec.file\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            spec.onBeforeStatusChange && spec.onBeforeStatusChange(id);\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        removeFileRef: function(id) {\n            var record = getDataByIds(id);\n\n            if (record) {\n                delete record.file;\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_FINALIZING: \"upload finalizing\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n","/*globals qq*/\n/**\n * Defines the public API for FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.basePublicApi = {\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\n        addBlobs: function(blobDataOrArray, params, endpoint) {\n            this.addFiles(blobDataOrArray, params, endpoint);\n        },\n\n        addInitialFiles: function(cannedFileList) {\n            var self = this;\n\n            qq.each(cannedFileList, function(index, cannedFile) {\n                self._addCannedFile(cannedFile);\n            });\n        },\n\n        addFiles: function(data, params, endpoint) {\n            this._maybeHandleIos8SafariWorkaround();\n\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\n\n                processBlob = qq.bind(function(blob) {\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processBlobData = qq.bind(function(blobData) {\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\n                }, this),\n\n                processCanvas = qq.bind(function(canvas) {\n                    var blob = qq.canvasToBlob(canvas);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName + \".png\"\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processCanvasData = qq.bind(function(canvasData) {\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: canvasData.name\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processFileOrInput = qq.bind(function(fileOrInput) {\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\n                        var files = Array.prototype.slice.call(fileOrInput.files),\n                            self = this;\n\n                        qq.each(files, function(idx, file) {\n                            self._handleNewFile(file, batchId, verifiedFiles);\n                        });\n                    }\n                    else {\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\n                    }\n                }, this),\n\n                normalizeData = function() {\n                    if (qq.isFileList(data)) {\n                        data = Array.prototype.slice.call(data);\n                    }\n                    data = [].concat(data);\n                },\n\n                self = this,\n                verifiedFiles = [];\n\n            this._currentBatchId = batchId;\n\n            if (data) {\n                normalizeData();\n\n                qq.each(data, function(idx, fileContainer) {\n                    if (qq.isFileOrInput(fileContainer)) {\n                        processFileOrInput(fileContainer);\n                    }\n                    else if (qq.isBlob(fileContainer)) {\n                        processBlob(fileContainer);\n                    }\n                    else if (qq.isObject(fileContainer)) {\n                        if (fileContainer.blob && fileContainer.name) {\n                            processBlobData(fileContainer);\n                        }\n                        else if (fileContainer.canvas && fileContainer.name) {\n                            processCanvasData(fileContainer);\n                        }\n                    }\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\n                        processCanvas(fileContainer);\n                    }\n                    else {\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\n                    }\n                });\n\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\n            }\n        },\n\n        cancel: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (uploadData && uploadData.status === qq.status.UPLOAD_FINALIZING) {\n              this.log(qq.format(\"Ignoring cancel for file ID {} ({}).  Finalizing upload.\", id, this.getName(id)), \"error\");\n            }\n            else {\n                this._handler.cancel(id);\n            }\n        },\n\n        cancelAll: function() {\n            var storedIdsCopy = [],\n                self = this;\n\n            qq.extend(storedIdsCopy, this._storedIds);\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\n                self.cancel(storedFileId);\n            });\n\n            this._handler.cancelAll();\n        },\n\n        clearStoredFiles: function() {\n            this._storedIds = [];\n        },\n\n        continueUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            if (uploadData.status === qq.status.PAUSED) {\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\n                this._uploadFile(id);\n                return true;\n            }\n            else {\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        deleteFile: function(id) {\n            return this._onSubmitDelete(id);\n        },\n\n        // TODO document?\n        doesExist: function(fileOrBlobId) {\n            return this._handler.isValid(fileOrBlobId);\n        },\n\n        // Generate a variable size thumbnail on an img or canvas,\n        // returning a promise that is fulfilled when the attempt completes.\n        // Thumbnail can either be based off of a URL for an image returned\n        // by the server in the upload response, or the associated `Blob`.\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\n            var promiseToReturn = new qq.Promise(),\n                fileOrUrl, options;\n\n            if (this._imageGenerator) {\n                fileOrUrl = this._thumbnailUrls[fileId];\n                options = {\n                    customResizeFunction: customResizeFunction,\n                    maxSize: maxSize > 0 ? maxSize : null,\n                    scale: maxSize > 0\n                };\n\n                // If client-side preview generation is possible\n                // and we are not specifically looking for the image URl returned by the server...\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\n                    fileOrUrl = this.getFile(fileId);\n                }\n\n                /* jshint eqeqeq:false,eqnull:true */\n                if (fileOrUrl == null) {\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\n                }\n                else {\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\n                        function success(modifiedContainer) {\n                            promiseToReturn.success(modifiedContainer);\n                        },\n\n                        function failure(container, reason) {\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\n                        }\n                    );\n                }\n            }\n            else {\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\n            }\n\n            return promiseToReturn;\n        },\n\n        getButton: function(fileId) {\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\n        },\n\n        getEndpoint: function(fileId) {\n            return this._endpointStore.get(fileId);\n        },\n\n        getFile: function(fileOrBlobId) {\n            var file = this._handler.getFile(fileOrBlobId);\n            var uploadDataRecord;\n\n            if (!file) {\n                uploadDataRecord = this._uploadData.retrieve({id: fileOrBlobId});\n\n                if (uploadDataRecord) {\n                    file = uploadDataRecord.file;\n                }\n            }\n\n            return file || null;\n        },\n\n        getInProgress: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED\n                ]\n            }).length;\n        },\n\n        getName: function(id) {\n            return this._uploadData.retrieve({id: id}).name;\n        },\n\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\n        getParentId: function(id) {\n            var uploadDataEntry = this.getUploads({id: id}),\n                parentId = null;\n\n            if (uploadDataEntry) {\n                if (uploadDataEntry.parentId !== undefined) {\n                    parentId = uploadDataEntry.parentId;\n                }\n            }\n\n            return parentId;\n        },\n\n        getResumableFilesData: function() {\n            return this._handler.getResumableFilesData();\n        },\n\n        getSize: function(id) {\n            return this._uploadData.retrieve({id: id}).size;\n        },\n\n        getNetUploads: function() {\n            return this._netUploaded;\n        },\n\n        getRemainingAllowedItems: function() {\n            var allowedItems = this._currentItemLimit;\n\n            if (allowedItems > 0) {\n                return allowedItems - this._netUploadedOrQueued;\n            }\n\n            return null;\n        },\n\n        getUploads: function(optionalFilter) {\n            return this._uploadData.retrieve(optionalFilter);\n        },\n\n        getUuid: function(id) {\n            return this._uploadData.retrieve({id: id}).uuid;\n        },\n\n        isResumable: function(id) {\n            return this._handler.hasResumeRecord(id);\n        },\n\n        log: function(str, level) {\n            if (this._options.debug && (!level || level === \"info\")) {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\n            }\n            else if (level && level !== \"info\") {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\n\n            }\n        },\n\n        pauseUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            // Pause only really makes sense if the file is uploading or retrying\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\n                if (this._handler.pause(id)) {\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\n                    return true;\n                }\n                else {\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\n                }\n            }\n            else {\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        removeFileRef: function(id) {\n            this._handler.expunge(id);\n            this._uploadData.removeFileRef(id);\n        },\n\n        reset: function() {\n            this.log(\"Resetting uploader...\");\n\n            this._handler.reset();\n            this._storedIds = [];\n            this._autoRetries = [];\n            this._retryTimeouts = [];\n            this._preventRetries = [];\n            this._thumbnailUrls = [];\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n\n            this._paramsStore.reset();\n            this._endpointStore.reset();\n            this._netUploadedOrQueued = 0;\n            this._netUploaded = 0;\n            this._uploadData.reset();\n            this._buttonIdsForFileIds = [];\n\n            this._pasteHandler && this._pasteHandler.reset();\n            this._options.session.refreshOnReset && this._refreshSessionData();\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n\n            this._totalProgress && this._totalProgress.reset();\n\n            this._customResumeDataStore.reset();\n        },\n\n        retry: function(id) {\n            return this._manualRetry(id);\n        },\n\n        scaleImage: function(id, specs) {\n            var self = this;\n\n            return qq.Scaler.prototype.scaleImage(id, specs, {\n                log: qq.bind(self.log, self),\n                getFile: qq.bind(self.getFile, self),\n                uploadData: self._uploadData\n            });\n        },\n\n        setCustomHeaders: function(headers, id) {\n            this._customHeadersStore.set(headers, id);\n        },\n\n        setCustomResumeData: function(id, data) {\n            this._customResumeDataStore.set(data, id);\n        },\n\n        setDeleteFileCustomHeaders: function(headers, id) {\n            this._deleteFileCustomHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileEndpoint: function(endpoint, id) {\n            this._deleteFileEndpointStore.set(endpoint, id);\n        },\n\n        setDeleteFileParams: function(params, id) {\n            this._deleteFileParamsStore.set(params, id);\n        },\n\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\n        setEndpoint: function(endpoint, id) {\n            this._endpointStore.set(endpoint, id);\n        },\n\n        setForm: function(elementOrId) {\n            this._updateFormSupportAndParams(elementOrId);\n        },\n\n        setItemLimit: function(newItemLimit) {\n            this._currentItemLimit = newItemLimit;\n        },\n\n        setName: function(id, newName) {\n            this._uploadData.updateName(id, newName);\n        },\n\n        setParams: function(params, id) {\n            this._paramsStore.set(params, id);\n        },\n\n        setUuid: function(id, newUuid) {\n            return this._uploadData.uuidChanged(id, newUuid);\n        },\n\n        /**\n         * Expose the internal status of a file id to the public api for manual state changes\n         * @public\n         *\n         * @param {Number} id,\n         * @param {String} newStatus\n         *\n         * @todo Implement the remaining methods\n         */\n        setStatus: function(id, newStatus) {\n            var fileRecord = this.getUploads({id: id});\n            if (!fileRecord) {\n                throw new qq.Error(id + \" is not a valid file ID.\");\n            }\n\n            switch (newStatus) {\n                case qq.status.DELETED:\n                    this._onDeleteComplete(id, null, false);\n                    break;\n                case qq.status.DELETE_FAILED:\n                    this._onDeleteComplete(id, null, true);\n                    break;\n                default:\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\n                    this.log(errorMessage);\n                    throw new qq.Error(errorMessage);\n            }\n        },\n\n        uploadStoredFiles: function() {\n            if (this._storedIds.length === 0) {\n                this._itemError(\"noFilesError\");\n            }\n            else {\n                this._uploadStoredFiles();\n            }\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploaderBasic mode.\n     */\n    qq.basePrivateApi = {\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\n        _addCannedFile: function(sessionData) {\n            var self = this;\n\n            return this._uploadData.addFile({\n                uuid: sessionData.uuid,\n                name: sessionData.name,\n                size: sessionData.size,\n                status: qq.status.UPLOAD_SUCCESSFUL,\n                onBeforeStatusChange: function(id) {\n                    sessionData.deleteFileEndpoint && self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\n                    sessionData.deleteFileParams && self.setDeleteFileParams(sessionData.deleteFileParams, id);\n\n                    if (sessionData.thumbnailUrl) {\n                        self._thumbnailUrls[id] = sessionData.thumbnailUrl;\n                    }\n\n                    self._netUploaded++;\n                    self._netUploadedOrQueued++;\n                }\n            });\n        },\n\n        _annotateWithButtonId: function(file, associatedInput) {\n            if (qq.isFile(file)) {\n                file.qqButtonId = this._getButtonId(associatedInput);\n            }\n        },\n\n        _batchError: function(message) {\n            this._options.callbacks.onError(null, null, message, undefined);\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return new qq.DeleteFileAjaxRequester({\n                method: this._options.deleteFile.method.toUpperCase(),\n                maxConnections: this._options.maxConnections,\n                uuidParamName: this._options.request.uuidName,\n                customHeaders: this._deleteFileCustomHeadersStore,\n                paramsStore: this._deleteFileParamsStore,\n                endpointStore: this._deleteFileEndpointStore,\n                cors: this._options.cors,\n                log: qq.bind(self.log, self),\n                onDelete: function(id) {\n                    self._onDelete(id);\n                    self._options.callbacks.onDelete(id);\n                },\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                }\n\n            });\n        },\n\n        _createPasteHandler: function() {\n            var self = this;\n\n            return new qq.PasteSupport({\n                targetElement: this._options.paste.targetElement,\n                callbacks: {\n                    log: qq.bind(self.log, self),\n                    pasteReceived: function(blob) {\n                        self._handleCheckedCallback({\n                            name: \"onPasteReceived\",\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\n                            identifier: \"pasted image\"\n                        });\n                    }\n                }\n            });\n        },\n\n        _createStore: function(initialValue, _readOnlyValues_) {\n            var store = {},\n                catchall = initialValue,\n                perIdReadOnlyValues = {},\n                readOnlyValues = _readOnlyValues_,\n                copy = function(orig) {\n                    if (qq.isObject(orig)) {\n                        return qq.extend({}, orig);\n                    }\n                    return orig;\n                },\n                getReadOnlyValues = function() {\n                    if (qq.isFunction(readOnlyValues)) {\n                        return readOnlyValues();\n                    }\n                    return readOnlyValues;\n                },\n                includeReadOnlyValues = function(id, existing) {\n                    if (readOnlyValues && qq.isObject(existing)) {\n                        qq.extend(existing, getReadOnlyValues());\n                    }\n\n                    if (perIdReadOnlyValues[id]) {\n                        qq.extend(existing, perIdReadOnlyValues[id]);\n                    }\n                };\n\n            return {\n                set: function(val, id) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id == null) {\n                        store = {};\n                        catchall = copy(val);\n                    }\n                    else {\n                        store[id] = copy(val);\n                    }\n                },\n\n                get: function(id) {\n                    var values;\n\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id != null && store[id]) {\n                        values = store[id];\n                    }\n                    else {\n                        values = copy(catchall);\n                    }\n\n                    includeReadOnlyValues(id, values);\n\n                    return copy(values);\n                },\n\n                addReadOnly: function(id, values) {\n                    // Only applicable to Object stores\n                    if (qq.isObject(store)) {\n                        // If null ID, apply readonly values to all files\n                        if (id === null) {\n                            if (qq.isFunction(values)) {\n                                readOnlyValues = values;\n                            }\n                            else {\n                                readOnlyValues = readOnlyValues || {};\n                                qq.extend(readOnlyValues, values);\n                            }\n                        }\n                        else {\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\n                            qq.extend(perIdReadOnlyValues[id], values);\n                        }\n                    }\n                },\n\n                remove: function(fileId) {\n                    return delete store[fileId];\n                },\n\n                reset: function() {\n                    store = {};\n                    perIdReadOnlyValues = {};\n                    catchall = initialValue;\n                }\n            };\n        },\n\n        _createUploadDataTracker: function() {\n            var self = this;\n\n            return new qq.UploadData({\n                getName: function(id) {\n                    return self.getName(id);\n                },\n                getUuid: function(id) {\n                    return self.getUuid(id);\n                },\n                getSize: function(id) {\n                    return self.getSize(id);\n                },\n                onStatusChange: function(id, oldStatus, newStatus) {\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\n                    self._maybeAllComplete(id, newStatus);\n\n                    if (self._totalProgress) {\n                        setTimeout(function() {\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\n                        }, 0);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Generate a tracked upload button.\n         *\n         * @param spec Object containing a required `element` property\n         * along with optional `multiple`, `accept`, and `folders`.\n         * @returns {qq.UploadButton}\n         * @private\n         */\n        _createUploadButton: function(spec) {\n            var self = this,\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\n                button;\n\n            function allowMultiple() {\n                if (qq.supportedFeatures.ajaxUploading) {\n                    // Workaround for bug in iOS7+ (see #1039)\n                    if (self._options.workarounds.iosEmptyVideos &&\n                        qq.ios() &&\n                        !qq.ios6() &&\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\n\n                        return false;\n                    }\n\n                    if (spec.multiple === undefined) {\n                        return self._options.multiple;\n                    }\n\n                    return spec.multiple;\n                }\n\n                return false;\n            }\n\n            button = new qq.UploadButton({\n                acceptFiles: acceptFiles,\n                element: spec.element,\n                focusClass: this._options.classes.buttonFocus,\n                folders: spec.folders,\n                hoverClass: this._options.classes.buttonHover,\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\n                multiple: allowMultiple(),\n                name: this._options.request.inputName,\n                onChange: function(input) {\n                    self._onInputChange(input);\n                },\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\n            });\n\n            this._disposeSupport.addDisposer(function() {\n                button.dispose();\n            });\n\n            self._buttons.push(button);\n\n            return button;\n        },\n\n        _createUploadHandler: function(additionalOptions, namespace) {\n            var self = this,\n                lastOnProgress = {},\n                options = {\n                    debug: this._options.debug,\n                    maxConnections: this._options.maxConnections,\n                    cors: this._options.cors,\n                    paramsStore: this._paramsStore,\n                    endpointStore: this._endpointStore,\n                    chunking: this._options.chunking,\n                    resume: this._options.resume,\n                    blobs: this._options.blobs,\n                    log: qq.bind(self.log, self),\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\n                    onProgress: function(id, name, loaded, total) {\n                        if (loaded < 0 || total < 0) {\n                            return;\n                        }\n\n                        if (lastOnProgress[id]) {\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\n                                self._onProgress(id, name, loaded, total);\n                                self._options.callbacks.onProgress(id, name, loaded, total);\n                            }\n                        }\n                        else {\n                            self._onProgress(id, name, loaded, total);\n                            self._options.callbacks.onProgress(id, name, loaded, total);\n                        }\n\n                        lastOnProgress[id] = {loaded: loaded, total: total};\n\n                    },\n                    onComplete: function(id, name, result, xhr) {\n                        delete lastOnProgress[id];\n\n                        var status = self.getUploads({id: id}).status,\n                            retVal;\n\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\n                        // invoked by the browser multiple times for the same XHR instance with the same state\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\n                        // done this.\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\n                            return;\n                        }\n\n                        retVal = self._onComplete(id, name, result, xhr);\n\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\n                        // until the promise has been fulfilled.\n                        if (retVal instanceof  qq.Promise) {\n                            retVal.done(function() {\n                                self._options.callbacks.onComplete(id, name, result, xhr);\n                            });\n                        }\n                        else {\n                            self._options.callbacks.onComplete(id, name, result, xhr);\n                        }\n                    },\n                    onCancel: function(id, name, cancelFinalizationEffort) {\n                        var promise = new qq.Promise();\n\n                        self._handleCheckedCallback({\n                            name: \"onCancel\",\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\n                            onFailure: promise.failure,\n                            onSuccess: function() {\n                                cancelFinalizationEffort.then(function() {\n                                    self._onCancel(id, name);\n                                });\n\n                                promise.success();\n                            },\n                            identifier: id\n                        });\n\n                        return promise;\n                    },\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\n                    onUpload: function(id, name) {\n                        self._onUpload(id, name);\n                        var onUploadResult = self._options.callbacks.onUpload(id, name);\n\n                        if (qq.isGenericPromise(onUploadResult)) {\n                            self.log(qq.format(\"onUpload for {} returned a Promise - waiting for resolution.\", id));\n                            return onUploadResult;\n                        }\n\n                        return new qq.Promise().success();\n                    },\n                    onUploadChunk: function(id, name, chunkData) {\n                        self._onUploadChunk(id, chunkData);\n                        var onUploadChunkResult = self._options.callbacks.onUploadChunk(id, name, chunkData);\n\n                        if (qq.isGenericPromise(onUploadChunkResult)) {\n                            self.log(qq.format(\"onUploadChunk for {}.{} returned a Promise - waiting for resolution.\", id, chunkData.partIndex));\n                            return onUploadChunkResult;\n                        }\n\n                        return new qq.Promise().success();\n                    },\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\n                        self._onUploadChunkSuccess(id, chunkData);\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\n                    },\n                    onResume: function(id, name, chunkData, customResumeData) {\n                        return self._options.callbacks.onResume(id, name, chunkData, customResumeData);\n                    },\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\n                        return self._onAutoRetry.apply(self, arguments);\n                    },\n                    onUuidChanged: function(id, newUuid) {\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\n                        self.setUuid(id, newUuid);\n                    },\n                    getName: qq.bind(self.getName, self),\n                    getUuid: qq.bind(self.getUuid, self),\n                    getSize: qq.bind(self.getSize, self),\n                    setSize: qq.bind(self._setSize, self),\n                    getDataByUuid: function(uuid) {\n                        return self.getUploads({uuid: uuid});\n                    },\n                    isQueued: function(id) {\n                        var status = self.getUploads({id: id}).status;\n                        return status === qq.status.QUEUED ||\n                            status === qq.status.SUBMITTED ||\n                            status === qq.status.UPLOAD_RETRYING ||\n                            status === qq.status.PAUSED;\n                    },\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\n                    getIdsInBatch: self._uploadData.getIdsInBatch,\n                    isInProgress: function(id) {\n                        return self.getUploads({id: id}).status === qq.status.UPLOADING;\n                    },\n                    getCustomResumeData: qq.bind(self._getCustomResumeData, self),\n                    setStatus: function(id, status) {\n                        self._uploadData.setStatus(id, status);\n                    }\n                };\n\n            qq.each(this._options.request, function(prop, val) {\n                options[prop] = val;\n            });\n\n            options.customHeaders = this._customHeadersStore;\n\n            if (additionalOptions) {\n                qq.each(additionalOptions, function(key, val) {\n                    options[key] = val;\n                });\n            }\n\n            return new qq.UploadHandlerController(options, namespace);\n        },\n\n        _fileOrBlobRejected: function(id) {\n            this._netUploadedOrQueued--;\n            this._uploadData.setStatus(id, qq.status.REJECTED);\n        },\n\n        _formatSize: function(bytes) {\n            if (bytes === 0) {\n                return bytes + this._options.text.sizeSymbols[0];\n            }\n            var i = -1;\n            do {\n                bytes = bytes / 1000;\n                i++;\n            } while (bytes > 999);\n\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\n        },\n\n        // Creates an internal object that tracks various properties of each extra button,\n        // and then actually creates the extra button.\n        _generateExtraButtonSpecs: function() {\n            var self = this;\n\n            this._extraButtonSpecs = {};\n\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\n                var multiple = extraButtonOptionEntry.multiple,\n                    validation = qq.extend({}, self._options.validation, true),\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\n\n                if (multiple === undefined) {\n                    multiple = self._options.multiple;\n                }\n\n                if (extraButtonSpec.validation) {\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\n                }\n\n                qq.extend(extraButtonSpec, {\n                    multiple: multiple,\n                    validation: validation\n                }, true);\n\n                self._initExtraButton(extraButtonSpec);\n            });\n        },\n\n        _getButton: function(buttonId) {\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\n\n            if (extraButtonsSpec) {\n                return extraButtonsSpec.element;\n            }\n            else if (buttonId === this._defaultButtonId) {\n                return this._options.button;\n            }\n        },\n\n        /**\n         * Gets the internally used tracking ID for a button.\n         *\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\n         * @private\n         */\n        _getButtonId: function(buttonOrFileInputOrFile) {\n            var inputs, fileInput,\n                fileBlobOrInput = buttonOrFileInputOrFile;\n\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\n            }\n\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\n                if (qq.isFile(fileBlobOrInput)) {\n                    return fileBlobOrInput.qqButtonId;\n                }\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\n\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\n\n                qq.each(inputs, function(idx, input) {\n                    if (input.getAttribute(\"type\") === \"file\") {\n                        fileInput = input;\n                        return false;\n                    }\n                });\n\n                if (fileInput) {\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n            }\n        },\n\n        _getCustomResumeData: function(fileId) {\n            return this._customResumeDataStore.get(fileId);\n        },\n\n        _getNotFinished: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED,\n                    qq.status.SUBMITTING,\n                    qq.status.SUBMITTED,\n                    qq.status.PAUSED\n                ]\n            }).length;\n        },\n\n        // Get the validation options for this button.  Could be the default validation option\n        // or a specific one assigned to this particular button.\n        _getValidationBase: function(buttonId) {\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\n\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\n        },\n\n        _getValidationDescriptor: function(fileWrapper) {\n            if (fileWrapper.file instanceof qq.BlobProxy) {\n                return {\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\n                    size: fileWrapper.file.referenceBlob.size\n                };\n            }\n\n            return {\n                name: this.getUploads({id: fileWrapper.id}).name,\n                size: this.getUploads({id: fileWrapper.id}).size\n            };\n        },\n\n        _getValidationDescriptors: function(fileWrappers) {\n            var self = this,\n                fileDescriptors = [];\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\n            });\n\n            return fileDescriptors;\n        },\n\n        // Allows camera access on either the default or an extra button for iOS devices.\n        _handleCameraAccess: function() {\n            if (this._options.camera.ios && qq.ios()) {\n                var acceptIosCamera = \"image/*;capture=camera\",\n                    button = this._options.camera.button,\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\n                    optionRoot = this._options;\n\n                // If we are not targeting the default button, it is an \"extra\" button\n                if (buttonId && buttonId !== this._defaultButtonId) {\n                    optionRoot = this._extraButtonSpecs[buttonId];\n                }\n\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\n                optionRoot.multiple = false;\n\n                // update the options\n                if (optionRoot.validation.acceptFiles === null) {\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\n                }\n                else {\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\n                }\n\n                // update the already-created button\n                qq.each(this._buttons, function(idx, button) {\n                    if (button.getButtonId() === buttonId) {\n                        button.setMultiple(optionRoot.multiple);\n                        button.setAcceptFiles(optionRoot.acceptFiles);\n\n                        return false;\n                    }\n                });\n            }\n        },\n\n        _handleCheckedCallback: function(details) {\n            var self = this,\n                callbackRetVal = details.callback();\n\n            if (qq.isGenericPromise(callbackRetVal)) {\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\n                return callbackRetVal.then(\n                    function(successParam) {\n                        self.log(details.name + \" promise success for \" + details.identifier);\n                        details.onSuccess(successParam);\n                    },\n                    function() {\n                        if (details.onFailure) {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                            details.onFailure();\n                        }\n                        else {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                        }\n                    });\n            }\n\n            if (callbackRetVal !== false) {\n                details.onSuccess(callbackRetVal);\n            }\n            else {\n                if (details.onFailure) {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\n                    details.onFailure();\n                }\n                else {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\n                }\n            }\n\n            return callbackRetVal;\n        },\n\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\n            var self = this,\n                uuid = qq.getUniqueId(),\n                size = -1,\n                name = qq.getFilename(file),\n                actualFile = file.blob || file,\n                handler = this._customNewFileHandler ?\n                    this._customNewFileHandler :\n                    qq.bind(self._handleNewFileGeneric, self);\n\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\n                size = actualFile.size;\n            }\n\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\n                uploadData: self._uploadData,\n                paramsStore: self._paramsStore,\n                addFileToHandler: function(id, file) {\n                    self._handler.add(id, file);\n                    self._netUploadedOrQueued++;\n                    self._trackButton(id);\n                }\n            });\n        },\n\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\n            var id = this._uploadData.addFile({\n                uuid: uuid,\n                name: name,\n                size: size,\n                batchId: batchId,\n                file: file\n            });\n\n            this._handler.add(id, file);\n\n            this._trackButton(id);\n\n            this._netUploadedOrQueued++;\n\n            fileList.push({id: id, file: file});\n        },\n\n        _handlePasteSuccess: function(blob, extSuppliedName) {\n            var extension = blob.type.split(\"/\")[1],\n                name = extSuppliedName;\n\n            /*jshint eqeqeq: true, eqnull: true*/\n            if (name == null) {\n                name = this._options.paste.defaultName;\n            }\n\n            name += \".\" + extension;\n\n            this.addFiles({\n                name: name,\n                blob: blob\n            });\n        },\n\n        _handleDeleteSuccess: function(id) {\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\n                var name = this.getName(id);\n\n                this._netUploadedOrQueued--;\n                this._netUploaded--;\n                this._handler.expunge(id);\n                this._uploadData.setStatus(id, qq.status.DELETED);\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\n            }\n        },\n\n        _handleDeleteFailed: function(id, xhrOrXdr) {\n            var name = this.getName(id);\n\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\n\n            // Check first if xhrOrXdr is actually passed or valid\n            // For error reporting, we only have access to the response status if this is not\n            // an `XDomainRequest`.\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\n            }\n            else {\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\n            }\n        },\n\n        // Creates an extra button element\n        _initExtraButton: function(spec) {\n            var button = this._createUploadButton({\n                accept: spec.validation.acceptFiles,\n                allowedExtensions: spec.validation.allowedExtensions,\n                element: spec.element,\n                folders: spec.folders,\n                multiple: spec.multiple,\n                title: spec.fileInputTitle\n            });\n\n            this._extraButtonSpecs[button.getButtonId()] = spec;\n        },\n\n        _initFormSupportAndParams: function() {\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n            );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore = this._createStore(\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\n                );\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\n                }\n            }\n            else {\n                this._paramsStore = this._createStore(this._options.request.params);\n            }\n        },\n\n        _isDeletePossible: function() {\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\n                return false;\n            }\n\n            if (this._options.cors.expected) {\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\n                    return true;\n                }\n\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _isAllowedExtension: function(allowed, fileName) {\n            var valid = false;\n\n            if (!allowed.length) {\n                return true;\n            }\n\n            qq.each(allowed, function(idx, allowedExt) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExt)) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\n\n                    if (fileName.match(extRegex) != null) {\n                        valid = true;\n                        return false;\n                    }\n                }\n            });\n\n            return valid;\n        },\n\n        /**\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\n         *\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\n         * @param maybeNameOrNames names of the items that have failed, if applicable\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\n         * @private\n         */\n        _itemError: function(code, maybeNameOrNames, item) {\n            var message = this._options.messages[code],\n                allowedExtensions = [],\n                names = [].concat(maybeNameOrNames),\n                name = names[0],\n                buttonId = this._getButtonId(item),\n                validationBase = this._getValidationBase(buttonId),\n                extensionsForMessage, placeholderMatch;\n\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExtension)) {\n                    allowedExtensions.push(allowedExtension);\n                }\n            });\n\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\n\n            r(\"{file}\", this._options.formatFileName(name));\n            r(\"{extensions}\", extensionsForMessage);\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\n\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\n            if (placeholderMatch !== null) {\n                qq.each(placeholderMatch, function(idx, placeholder) {\n                    r(placeholder, names[idx]);\n                });\n            }\n\n            this._options.callbacks.onError(null, name, message, undefined);\n\n            return message;\n        },\n\n        /**\n         * Conditionally orders a manual retry of a failed upload.\n         *\n         * @param id File ID of the failed upload\n         * @param callback Optional callback to invoke if a retry is prudent.\n         * In lieu of asking the upload handler to retry.\n         * @returns {boolean} true if a manual retry will occur\n         * @private\n         */\n        _manualRetry: function(id, callback) {\n            if (this._onBeforeManualRetry(id)) {\n                this._netUploadedOrQueued++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n\n                if (callback) {\n                    callback(id);\n                }\n                else {\n                    this._handler.retry(id);\n                }\n\n                return true;\n            }\n        },\n\n        _maybeAllComplete: function(id, status) {\n            var self = this,\n                notFinished = this._getNotFinished();\n\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\n                this._succeededSinceLastAllComplete.push(id);\n            }\n            else if (status === qq.status.UPLOAD_FAILED) {\n                this._failedSinceLastAllComplete.push(id);\n            }\n\n            if (notFinished === 0 &&\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\n                setTimeout(function() {\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\n                }, 0);\n            }\n        },\n\n        _maybeHandleIos8SafariWorkaround: function() {\n            var self = this;\n\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n                setTimeout(function() {\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\n                }, 0);\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\n            }\n        },\n\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\n            // Assuming no one will actually set the response code to something other than 200\n            // and still set 'success' to true...\n            if (!response.success) {\n                if (xhr && xhr.status !== 200 && !response.error) {\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\n                }\n                else {\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\n                }\n            }\n        },\n\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\n            var self = this;\n\n            if (items.length > index) {\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\n                    setTimeout(function() {\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\n                            buttonId = self._getButtonId(items[index].file),\n                            button = self._getButton(buttonId);\n\n                        self._handleCheckedCallback({\n                            name: \"onValidate\",\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\n                        });\n                    }, 0);\n                }\n                else if (!validItem) {\n                    for (; index < items.length; index++) {\n                        self._fileOrBlobRejected(items[index].id);\n                    }\n                }\n            }\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\n\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n        },\n\n        /**\n         * Attempt to automatically retry a failed upload.\n         *\n         * @param id The file ID of the failed upload\n         * @param name The name of the file associated with the failed upload\n         * @param responseJSON Response from the server, parsed into a javascript object\n         * @param xhr Ajax transport used to send the failed request\n         * @param callback Optional callback to be invoked if a retry is prudent.\n         * Invoked in lieu of asking the upload handler to retry.\n         * @returns {boolean} true if an auto-retry will occur\n         * @private\n         */\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\n            var self = this;\n\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\n\n            if (self._shouldAutoRetry(id)) {\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\n\n                self._maybeParseAndSendUploadError.apply(self, arguments);\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\n                self._onBeforeAutoRetry(id, name);\n\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n                self._retryTimeouts[id] = setTimeout(function() {\n                    self.log(\"Starting retry for \" + name + \"...\");\n\n                    if (callback) {\n                        callback(id);\n                    }\n                    else {\n                        self._handler.retry(id);\n                    }\n                }, retryWaitPeriod);\n\n                return true;\n            }\n        },\n\n        _onBeforeAutoRetry: function(id, name) {\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            var itemLimit = this._currentItemLimit,\n                fileName;\n\n            if (this._preventRetries[id]) {\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\n                return false;\n            }\n            else if (this._handler.isValid(id)) {\n                fileName = this.getName(id);\n\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\n                    return false;\n                }\n\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\n                    this._itemError(\"retryFailTooManyItems\");\n                    return false;\n                }\n\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\n                return true;\n            }\n            else {\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\n                return false;\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._netUploadedOrQueued--;\n\n            clearTimeout(this._retryTimeouts[id]);\n\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\n                this._storedIds.splice(storedItemIndex, 1);\n            }\n\n            this._uploadData.setStatus(id, qq.status.CANCELED);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            if (!result.success) {\n                this._netUploadedOrQueued--;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\n\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\n                    this._preventRetries[id] = true;\n                }\n            }\n            else {\n                if (result.thumbnailUrl) {\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\n                }\n\n                this._netUploaded++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\n            }\n\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\n\n            return result.success ? true : false;\n        },\n\n        _onDelete: function(id) {\n            this._uploadData.setStatus(id, qq.status.DELETING);\n        },\n\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\n            var name = this.getName(id);\n\n            if (isError) {\n                this._handleDeleteFailed(id, xhrOrXdr);\n            }\n            else {\n                this._handleDeleteSuccess(id);\n            }\n        },\n\n        _onInputChange: function(input) {\n            var fileIndex;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\n                    this._annotateWithButtonId(input.files[fileIndex], input);\n                }\n\n                this.addFiles(input.files);\n            }\n            // Android 2.3.x will fire `onchange` even if no file has been selected\n            else if (input.value.length > 0) {\n                this.addFiles(input);\n            }\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n        },\n\n        _onProgress: function(id, name, loaded, total) {\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\n        },\n\n        _onSubmit: function(id, name) {\n            //nothing to do yet in core uploader\n        },\n\n        _onSubmitCallbackSuccess: function(id, name) {\n            this._onSubmit.apply(this, arguments);\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\n            this._onSubmitted.apply(this, arguments);\n\n            if (this._options.autoUpload) {\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n                this._uploadFile(id);\n            }\n            else {\n                this._storeForLater(id);\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n            }\n        },\n\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\n            var uuid = this.getUuid(id),\n                adjustedOnSuccessCallback;\n\n            if (onSuccessCallback) {\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\n            }\n\n            if (this._isDeletePossible()) {\n                this._handleCheckedCallback({\n                    name: \"onSubmitDelete\",\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\n                    onSuccess: adjustedOnSuccessCallback ||\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\n                    identifier: id\n                });\n                return true;\n            }\n            else {\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\n                return false;\n            }\n        },\n\n        _onSubmitted: function(id) {\n            //nothing to do in the base uploader\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._options.callbacks.onTotalProgress(loaded, total);\n        },\n\n        _onUploadPrep: function(id) {\n            // nothing to do in the core uploader for now\n        },\n\n        _onUpload: function(id, name) {\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            //nothing to do in the base uploader\n        },\n\n        _onUploadChunkSuccess: function(id, chunkData) {\n            if (!this._preventRetries[id] && this._options.retry.enableAuto) {\n                this._autoRetries[id] = 0;\n            }\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\n            if (newStatus === qq.status.PAUSED) {\n                clearTimeout(this._retryTimeouts[id]);\n            }\n        },\n\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\n            var self = this;\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                self._fileOrBlobRejected(fileWrapper.id);\n            });\n        },\n\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\n            var errorMessage,\n                itemLimit = this._currentItemLimit,\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\n\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\n                if (items.length > 0) {\n                    this._handleCheckedCallback({\n                        name: \"onValidate\",\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\n                    });\n                }\n                else {\n                    this._itemError(\"noFilesError\");\n                }\n            }\n            else {\n                this._onValidateBatchCallbackFailure(items);\n                errorMessage = this._options.messages.tooManyItemsError\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\n                this._batchError(errorMessage);\n            }\n        },\n\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\n            var nextIndex = index + 1;\n\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\n\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n        },\n\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\n            var self = this,\n                nextIndex = index + 1,\n                validationDescriptor = this._getValidationDescriptor(items[index]);\n\n            this._validateFileOrBlobData(items[index], validationDescriptor)\n                .then(\n                function() {\n                    self._upload(items[index].id, params, endpoint);\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\n                },\n                function() {\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n                }\n            );\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            if (items.length === 0) {\n                this._itemError(\"noFilesError\");\n                return;\n            }\n\n            var validationDescriptors = this._getValidationDescriptors(items),\n                buttonId = this._getButtonId(items[0].file),\n                button = this._getButton(buttonId);\n\n            this._handleCheckedCallback({\n                name: \"onValidateBatch\",\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\n                identifier: \"batch validation\"\n            });\n        },\n\n        _preventLeaveInProgress: function() {\n            var self = this;\n\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\n                if (self.getInProgress()) {\n                    e = e || window.event;\n                    // for ie, ff\n                    e.returnValue = self._options.messages.onLeave;\n                    // for webkit\n                    return self._options.messages.onLeave;\n                }\n            });\n        },\n\n        // Attempts to refresh session data only if the `qq.Session` module exists\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\n        // callback will be invoked once the refresh is complete.\n        _refreshSessionData: function() {\n            var self = this,\n                options = this._options.session;\n\n            /* jshint eqnull:true */\n            if (qq.Session && this._options.session.endpoint != null) {\n                if (!this._session) {\n                    qq.extend(options, {cors: this._options.cors});\n\n                    options.log = qq.bind(this.log, this);\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\n\n                    this._session = new qq.Session(options);\n                }\n\n                setTimeout(function() {\n                    self._session.refresh().then(function(response, xhrOrXdr) {\n                        self._sessionRequestComplete();\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\n\n                    }, function(response, xhrOrXdr) {\n\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\n                    });\n                }, 0);\n            }\n        },\n\n        _sessionRequestComplete: function() {},\n\n        _setSize: function(id, newSize) {\n            this._uploadData.updateSize(id, newSize);\n            this._totalProgress && this._totalProgress.onNewSize(id);\n        },\n\n        _shouldAutoRetry: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            /*jshint laxbreak: true */\n            if (!this._preventRetries[id]\n                && this._options.retry.enableAuto\n                && uploadData.status !== qq.status.PAUSED) {\n\n                if (this._autoRetries[id] === undefined) {\n                    this._autoRetries[id] = 0;\n                }\n\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\n                    this._autoRetries[id] += 1;\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _storeForLater: function(id) {\n            this._storedIds.push(id);\n        },\n\n        // Maps a file with the button that was used to select it.\n        _trackButton: function(id) {\n            var buttonId;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                buttonId = this._handler.getFile(id).qqButtonId;\n            }\n            else {\n                buttonId = this._getButtonId(this._handler.getInput(id));\n            }\n\n            if (buttonId) {\n                this._buttonIdsForFileIds[id] = buttonId;\n            }\n        },\n\n        _updateFormSupportAndParams: function(formElementOrId) {\n            this._options.form.element = formElementOrId;\n\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n                );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this.setEndpoint(this._formSupport.newEndpoint);\n                }\n            }\n        },\n\n        _upload: function(id, params, endpoint) {\n            var name = this.getName(id);\n\n            if (params) {\n                this.setParams(params, id);\n            }\n\n            if (endpoint) {\n                this.setEndpoint(endpoint, id);\n            }\n\n            this._handleCheckedCallback({\n                name: \"onSubmit\",\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\n                identifier: id\n            });\n        },\n\n        _uploadFile: function(id) {\n            if (!this._handler.upload(id)) {\n                this._uploadData.setStatus(id, qq.status.QUEUED);\n            }\n        },\n\n        _uploadStoredFiles: function() {\n            var idToUpload, stillSubmitting,\n                self = this;\n\n            while (this._storedIds.length) {\n                idToUpload = this._storedIds.shift();\n                this._uploadFile(idToUpload);\n            }\n\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\n            if (stillSubmitting) {\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\n                setTimeout(function() {\n                    self._uploadStoredFiles();\n                }, 1000);\n            }\n        },\n\n        /**\n         * Performs some internal validation checks on an item, defined in the `validation` option.\n         *\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\n         * @private\n         */\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\n            var self = this,\n                file = (function() {\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\n                        return fileWrapper.file.referenceBlob;\n                    }\n                    return fileWrapper.file;\n                }()),\n                name = validationDescriptor.name,\n                size = validationDescriptor.size,\n                buttonId = this._getButtonId(fileWrapper.file),\n                validationBase = this._getValidationBase(buttonId),\n                validityChecker = new qq.Promise();\n\n            validityChecker.then(\n                function() {},\n                function() {\n                    self._fileOrBlobRejected(fileWrapper.id, name);\n                });\n\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\n                this._itemError(\"typeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (!this._options.validation.allowEmpty && size === 0) {\n                this._itemError(\"emptyError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\n                this._itemError(\"sizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && size < validationBase.minSizeLimit) {\n                this._itemError(\"minSizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\n                    validityChecker.success,\n                    function(errorCode) {\n                        self._itemError(errorCode + \"ImageError\", name, file);\n                        validityChecker.failure();\n                    }\n                );\n            }\n            else {\n                validityChecker.success();\n            }\n\n            return validityChecker;\n        },\n\n        _wrapCallbacks: function() {\n            var self, safeCallback, prop;\n\n            self = this;\n\n            safeCallback = function(name, callback, args) {\n                var errorMsg;\n\n                try {\n                    return callback.apply(self, args);\n                }\n                catch (exception) {\n                    errorMsg = exception.message || exception.toString();\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\n                }\n            };\n\n            /* jshint forin: false, loopfunc: true */\n            for (prop in this._options.callbacks) {\n                (function() {\n                    var callbackName, callbackFunc;\n                    callbackName = prop;\n                    callbackFunc = self._options.callbacks[callbackName];\n                    self._options.callbacks[callbackName] = function() {\n                        return safeCallback(callbackName, callbackFunc, arguments);\n                    };\n                }());\n            }\n        }\n    };\n}());\n","/*globals qq*/\n(function() {\n    \"use strict\";\n\n    qq.FineUploaderBasic = function(o) {\n        var self = this;\n\n        // These options define FineUploaderBasic mode.\n        this._options = {\n            debug: false,\n            button: null,\n            multiple: true,\n            maxConnections: 3,\n            disableCancelForFormUploads: false,\n            autoUpload: true,\n            warnBeforeUnload: true,\n\n            request: {\n                customHeaders: {},\n                endpoint: \"/server/upload\",\n                filenameParam: \"qqfilename\",\n                forceMultipart: true,\n                inputName: \"qqfile\",\n                method: \"POST\",\n                omitDefaultParams: false,\n                params: {},\n                paramsInBody: true,\n                requireSuccessJson: true,\n                totalFileSizeName: \"qqtotalfilesize\",\n                uuidName: \"qquuid\"\n            },\n\n            validation: {\n                allowedExtensions: [],\n                sizeLimit: 0,\n                minSizeLimit: 0,\n                itemLimit: 0,\n                stopOnFirstInvalidFile: true,\n                acceptFiles: null,\n                image: {\n                    maxHeight: 0,\n                    maxWidth: 0,\n                    minHeight: 0,\n                    minWidth: 0\n                },\n                allowEmpty: false\n            },\n\n            callbacks: {\n                onSubmit: function(id, name) {},\n                onSubmitted: function(id, name) {},\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\n                onAllComplete: function(successful, failed) {},\n                onCancel: function(id, name) {},\n                onUpload: function(id, name) {},\n                onUploadChunk: function(id, name, chunkData) {},\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\n                onResume: function(id, fileName, chunkData, customResumeData) {},\n                onProgress: function(id, name, loaded, total) {},\n                onTotalProgress: function(loaded, total) {},\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\n                onAutoRetry: function(id, name, attemptNumber) {},\n                onManualRetry: function(id, name) {},\n                onValidateBatch: function(fileOrBlobData) {},\n                onValidate: function(fileOrBlobData) {},\n                onSubmitDelete: function(id) {},\n                onDelete: function(id) {},\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\n                onPasteReceived: function(blob) {},\n                onStatusChange: function(id, oldStatus, newStatus) {},\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\n            },\n\n            messages: {\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n                emptyError: \"{file} is empty, please select files again without it.\",\n                noFilesError: \"No files to upload.\",\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\n                maxHeightImageError: \"Image is too tall.\",\n                maxWidthImageError: \"Image is too wide.\",\n                minHeightImageError: \"Image is not tall enough.\",\n                minWidthImageError: \"Image is not wide enough.\",\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\n            },\n\n            retry: {\n                enableAuto: false,\n                maxAutoAttempts: 3,\n                autoAttemptDelay: 5,\n                preventRetryResponseProperty: \"preventRetry\"\n            },\n\n            classes: {\n                buttonHover: \"qq-upload-button-hover\",\n                buttonFocus: \"qq-upload-button-focus\"\n            },\n\n            chunking: {\n                enabled: false,\n                concurrent: {\n                    enabled: false\n                },\n                mandatory: false,\n                paramNames: {\n                    partIndex: \"qqpartindex\",\n                    partByteOffset: \"qqpartbyteoffset\",\n                    chunkSize: \"qqchunksize\",\n                    totalFileSize: \"qqtotalfilesize\",\n                    totalParts: \"qqtotalparts\"\n                },\n                partSize: function(id) {\n                    return 2000000;\n                },\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\n                success: {\n                    endpoint: null,\n\n                    headers: function(id) {\n                        return null;\n                    },\n\n                    jsonPayload: false,\n\n                    method: \"POST\",\n\n                    params: function(id) {\n                        return null;\n                    },\n\n                    resetOnStatus: []\n                }\n            },\n\n            resume: {\n                enabled: false,\n                recordsExpireIn: 7, //days\n                paramNames: {\n                    resuming: \"qqresume\"\n                },\n                customKeys: function(fileId) {\n                    return [];\n                }\n            },\n\n            formatFileName: function(fileOrBlobName) {\n                return fileOrBlobName;\n            },\n\n            text: {\n                defaultResponseError: \"Upload failure reason unknown\",\n                fileInputTitle: \"file input\",\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\n            },\n\n            deleteFile: {\n                enabled: false,\n                method: \"DELETE\",\n                endpoint: \"/server/upload\",\n                customHeaders: {},\n                params: {}\n            },\n\n            cors: {\n                expected: false,\n                sendCredentials: false,\n                allowXdr: false\n            },\n\n            blobs: {\n                defaultName: \"misc_data\"\n            },\n\n            paste: {\n                targetElement: null,\n                defaultName: \"pasted_image\"\n            },\n\n            camera: {\n                ios: false,\n\n                // if ios is true: button is null means target the default button, otherwise target the button specified\n                button: null\n            },\n\n            // This refers to additional upload buttons to be handled by Fine Uploader.\n            // Each element is an object, containing `element` as the only required\n            // property.  The `element` must be a container that will ultimately\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\n            // Optional properties of each object include `multiple`, `validation`,\n            // and `folders`.\n            extraButtons: [],\n\n            // Depends on the session module.  Used to query the server for an initial file list\n            // during initialization and optionally after a `reset`.\n            session: {\n                endpoint: null,\n                params: {},\n                customHeaders: {},\n                refreshOnReset: true\n            },\n\n            // Send parameters associated with an existing form along with the files\n            form: {\n                // Element ID, HTMLElement, or null\n                element: \"qq-form\",\n\n                // Overrides the base `autoUpload`, unless `element` is null.\n                autoUpload: false,\n\n                // true = upload files on form submission (and squelch submit event)\n                interceptSubmit: true\n            },\n\n            // scale images client side, upload a new file for each scaled version\n            scaling: {\n                customResizer: null,\n\n                // send the original file as well\n                sendOriginal: true,\n\n                // fox orientation for scaled images\n                orient: true,\n\n                // If null, scaled image type will match reference image type.  This value will be referred to\n                // for any size record that does not specific a type.\n                defaultType: null,\n\n                defaultQuality: 80,\n\n                failureText: \"Failed to scale\",\n\n                includeExif: false,\n\n                // metadata about each requested scaled version\n                sizes: []\n            },\n\n            workarounds: {\n                iosEmptyVideos: true,\n                ios8SafariUploads: true,\n                ios8BrowserCrash: false\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(this._options, o, true);\n\n        this._buttons = [];\n        this._extraButtonSpecs = {};\n        this._buttonIdsForFileIds = [];\n\n        this._wrapCallbacks();\n        this._disposeSupport =  new qq.DisposeSupport();\n\n        this._storedIds = [];\n        this._autoRetries = [];\n        this._retryTimeouts = [];\n        this._preventRetries = [];\n        this._thumbnailUrls = [];\n\n        this._netUploadedOrQueued = 0;\n        this._netUploaded = 0;\n        this._uploadData = this._createUploadDataTracker();\n\n        this._initFormSupportAndParams();\n\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\n\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\n\n        this._endpointStore = this._createStore(this._options.request.endpoint);\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\n\n        this._handler = this._createUploadHandler();\n\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\n\n        if (this._options.button) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._options.button,\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._generateExtraButtonSpecs();\n\n        this._handleCameraAccess();\n\n        if (this._options.paste.targetElement) {\n            if (qq.PasteSupport) {\n                this._pasteHandler = this._createPasteHandler();\n            }\n            else {\n                this.log(\"Paste support module not found\", \"error\");\n            }\n        }\n\n        this._options.warnBeforeUnload && this._preventLeaveInProgress();\n\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\n        this._refreshSessionData();\n\n        this._succeededSinceLastAllComplete = [];\n        this._failedSinceLastAllComplete = [];\n\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\n        if (this._scaler.enabled) {\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\n        }\n\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\n            this._totalProgress = new qq.TotalProgress(\n                qq.bind(this._onTotalProgress, this),\n\n                function(id) {\n                    var entry = self._uploadData.retrieve({id: id});\n                    return (entry && entry.size) || 0;\n                }\n            );\n        }\n\n        this._currentItemLimit = this._options.validation.itemLimit;\n\n        this._customResumeDataStore = this._createStore();\n    };\n\n    // Define the private & public API methods.\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\n}());\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Base upload handler module.  Controls more specific handlers.\n *\n * @param o Options.  Passed along to the specific handler submodule as well.\n * @param namespace [optional] Namespace for the specific handler.\n */\nqq.UploadHandlerController = function(o, namespace) {\n    \"use strict\";\n\n    var controller = this,\n        chunkingPossible = false,\n        concurrentChunkingPossible = false,\n        chunking, preventRetryResponse, log, handler,\n\n    options = {\n        paramsStore: {},\n        maxConnections: 3, // maximum number of concurrent uploads\n        chunking: {\n            enabled: false,\n            multiple: {\n                enabled: false\n            }\n        },\n        log: function(str, level) {},\n        onProgress: function(id, fileName, loaded, total) {},\n        onComplete: function(id, fileName, response, xhr) {},\n        onCancel: function(id, fileName) {},\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\n        onUpload: function(id, fileName) {},\n        onUploadChunk: function(id, fileName, chunkData) {},\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\n        onAutoRetry: function(id, fileName, response, xhr) {},\n        onResume: function(id, fileName, chunkData, customResumeData) {},\n        onUuidChanged: function(id, newUuid) {},\n        getName: function(id) {},\n        setSize: function(id, newSize) {},\n        isQueued: function(id) {},\n        getIdsInProxyGroup: function(id) {},\n        getIdsInBatch: function(id) {},\n        isInProgress: function(id) {}\n    },\n\n    chunked = {\n        // Called when each chunk has uploaded successfully\n        done: function(id, chunkIdx, response, xhr) {\n            var chunkData = handler._getChunkData(id, chunkIdx);\n\n            handler._getFileState(id).attemptingResume = false;\n\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\n            handler._getFileState(id).loaded += chunkData.size;\n\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\n        },\n\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\n        // logic associated with closing out the file, such as combining the chunks.\n        finalize: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id);\n\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\n            handler.finalizeChunks(id).then(\n                function(response, xhr) {\n                    log(\"Finalize successful for \" + id);\n\n                    var normaizedResponse = upload.normalizeResponse(response, true);\n\n                    options.onProgress(id, name, size, size);\n                    handler._maybeDeletePersistedChunkData(id);\n                    upload.cleanup(id, normaizedResponse, xhr);\n                },\n                function(response, xhr) {\n                    var normalizedResponse = upload.normalizeResponse(response, false);\n\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normalizedResponse.error, \"error\");\n\n                    if (\n                        normalizedResponse.reset ||\n                        (xhr && options.chunking.success.resetOnStatus.indexOf(xhr.status) >= 0)\n                    ) {\n                        chunked.reset(id);\n                    }\n\n                    if (!options.onAutoRetry(id, name, normalizedResponse, xhr)) {\n                        upload.cleanup(id, normalizedResponse, xhr);\n                    }\n                }\n            );\n        },\n\n        handleFailure: function(chunkIdx, id, response, xhr) {\n            var name = options.getName(id);\n\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\n\n            handler.clearCachedChunk(id, chunkIdx);\n\n            var responseToReport = upload.normalizeResponse(response, false),\n                inProgressIdx;\n\n            if (responseToReport.reset) {\n                chunked.reset(id);\n            }\n            else {\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\n                if (inProgressIdx >= 0) {\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\n                }\n            }\n\n            // We may have aborted all other in-progress chunks for this file due to a failure.\n            // If so, ignore the failures associated with those aborts.\n            if (!handler._getFileState(id).temp.ignoreFailure) {\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\n                // chunks since they will be explicitly aborted\n                if (concurrentChunkingPossible) {\n                    handler._getFileState(id).temp.ignoreFailure = true;\n\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\n                        ckXhr.abort();\n                        // Flag the transport, in case we are waiting for some other async operation\n                        // to complete before attempting to upload the chunk\n                        ckXhr._cancelled = true;\n                    });\n\n                    // We must indicate that all aborted chunks are no longer in progress\n                    handler.moveInProgressToRemaining(id);\n\n                    // Free up any connections used by these chunks, but don't allow any\n                    // other files to take up the connections (until we have exhausted all auto-retries)\n                    connectionManager.free(id, true);\n                }\n\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\n                    // is a failure or not.\n                    upload.cleanup(id, responseToReport, xhr);\n                }\n            }\n        },\n\n        hasMoreParts: function(id) {\n            return !!handler._getFileState(id).chunking.remaining.length;\n        },\n\n        nextPart: function(id) {\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\n\n            if (nextIdx >= handler._getTotalChunks(id)) {\n                nextIdx = null;\n            }\n\n            return nextIdx;\n        },\n\n        reset: function(id) {\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\n\n            handler._maybeDeletePersistedChunkData(id);\n            handler.reevaluateChunking(id);\n            handler._getFileState(id).loaded = 0;\n            handler._getFileState(id).attemptingResume = false;\n        },\n\n        sendNext: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id),\n                chunkIdx = chunked.nextPart(id),\n                chunkData = handler._getChunkData(id, chunkIdx),\n                fileState = handler._getFileState(id),\n                resuming = fileState.attemptingResume,\n                inProgressChunks = fileState.chunking.inProgress || [];\n\n            if (fileState.loaded == null) {\n                fileState.loaded = 0;\n            }\n\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\n            if (resuming && options.onResume(id, name, chunkData, fileState.customResumeData) === false) {\n                chunked.reset(id);\n                chunkIdx = chunked.nextPart(id);\n                chunkData = handler._getChunkData(id, chunkIdx);\n                resuming = false;\n            }\n\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\n            if (chunkIdx == null && inProgressChunks.length === 0) {\n                chunked.finalize(id);\n            }\n\n            // Send the next chunk\n            else {\n                inProgressChunks.push(chunkIdx);\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\n\n                if (concurrentChunkingPossible) {\n                    connectionManager.open(id, chunkIdx);\n                }\n\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\n                    chunked.sendNext(id);\n                }\n\n                if (chunkData.blob.size === 0) {\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\n                }\n\n                var onUploadChunkPromise = options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\n\n                onUploadChunkPromise.then(\n                    function(requestOverrides) {\n                        if (!options.isInProgress(id)) {\n                            log(qq.format(\"Not sending chunked upload request for item {}.{} - no longer in progress.\", id, chunkIdx));\n                        }\n                        else {\n                            log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\n\n                            var uploadChunkData = {\n                                chunkIdx: chunkIdx,\n                                id: id,\n                                overrides: requestOverrides,\n                                resuming: resuming\n                            };\n\n                            handler.uploadChunk(uploadChunkData).then(\n                                // upload chunk success\n                                function success(response, xhr) {\n                                    log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\n\n                                    handler.clearCachedChunk(id, chunkIdx);\n\n                                    var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\n                                        responseToReport = upload.normalizeResponse(response, true),\n                                        inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\n\n                                    log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\n\n                                    chunked.done(id, chunkIdx, responseToReport, xhr);\n\n                                    if (inProgressChunkIdx >= 0) {\n                                        inProgressChunks.splice(inProgressChunkIdx, 1);\n                                    }\n\n                                    handler._maybePersistChunkedState(id);\n\n                                    if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\n                                        chunked.finalize(id);\n                                    }\n                                    else if (chunked.hasMoreParts(id)) {\n                                        chunked.sendNext(id);\n                                    }\n                                    else {\n                                        log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\n                                    }\n                                },\n\n                                // upload chunk failure\n                                function failure(response, xhr) {\n                                    chunked.handleFailure(chunkIdx, id, response, xhr);\n                                }\n                            )\n                                .done(function () {\n                                    handler.clearXhr(id, chunkIdx);\n                                });\n                        }\n                    },\n\n                    function(error) {\n                        chunked.handleFailure(chunkIdx, id, error, null);\n                    }\n                );\n            }\n        }\n    },\n\n    connectionManager = {\n        _open: [],\n        _openChunks: {},\n        _waiting: [],\n\n        available: function() {\n            var max = options.maxConnections,\n                openChunkEntriesCount = 0,\n                openChunksCount = 0;\n\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\n                openChunkEntriesCount++;\n                openChunksCount += openChunkIndexes.length;\n            });\n\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\n        },\n\n        /**\n         * Removes element from queue, starts upload of next\n         */\n        free: function(id, dontAllowNext) {\n            var allowNext = !dontAllowNext,\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\n                nextId;\n\n            delete connectionManager._openChunks[id];\n\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\n                delete handler._getFileState(id).file;\n            }\n\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\n            if (waitingIndex >= 0) {\n                connectionManager._waiting.splice(waitingIndex, 1);\n            }\n            // If this file was consuming a connection, allow the next file to be uploaded\n            else if (allowNext && connectionsIndex >= 0) {\n                connectionManager._open.splice(connectionsIndex, 1);\n\n                nextId = connectionManager._waiting.shift();\n                if (nextId >= 0) {\n                    connectionManager._open.push(nextId);\n                    upload.start(nextId);\n                }\n            }\n        },\n\n        getWaitingOrConnected: function() {\n            var waitingOrConnected = [];\n\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\n                if (chunks && chunks.length) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // For non-chunked files, only one connection will be consumed per file.\n            // This is where we aggregate those file IDs.\n            qq.each(connectionManager._open, function(idx, fileId) {\n                if (!connectionManager._openChunks[fileId]) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // There may be files waiting for a connection.\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\n\n            return waitingOrConnected;\n        },\n\n        isUsingConnection: function(id) {\n            return qq.indexOf(connectionManager._open, id) >= 0;\n        },\n\n        open: function(id, chunkIdx) {\n            if (chunkIdx == null) {\n                connectionManager._waiting.push(id);\n            }\n\n            if (connectionManager.available()) {\n                if (chunkIdx == null) {\n                    connectionManager._waiting.pop();\n                    connectionManager._open.push(id);\n                }\n                else {\n                    (function() {\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\n                        openChunksEntry.push(chunkIdx);\n                        connectionManager._openChunks[id] = openChunksEntry;\n                    }());\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            connectionManager._waiting = [];\n            connectionManager._open = [];\n        }\n    },\n\n    simple = {\n        send: function(id, name) {\n            handler._getFileState(id).loaded = 0;\n\n            log(\"Sending simple upload request for \" + id);\n            handler.uploadFile(id).then(\n                function(response, optXhr) {\n                    log(\"Simple upload request succeeded for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, true),\n                        size = options.getSize(id);\n\n                    options.onProgress(id, name, size, size);\n                    upload.maybeNewUuid(id, responseToReport);\n                    upload.cleanup(id, responseToReport, optXhr);\n                },\n\n                function(response, optXhr) {\n                    log(\"Simple upload request failed for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, false);\n\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\n                        upload.cleanup(id, responseToReport, optXhr);\n                    }\n                }\n            );\n        }\n    },\n\n    upload = {\n        cancel: function(id) {\n            log(\"Cancelling \" + id);\n            options.paramsStore.remove(id);\n            connectionManager.free(id);\n        },\n\n        cleanup: function(id, response, optXhr) {\n            var name = options.getName(id);\n\n            options.onComplete(id, name, response, optXhr);\n\n            if (handler._getFileState(id)) {\n                handler._clearXhrs && handler._clearXhrs(id);\n            }\n\n            connectionManager.free(id);\n        },\n\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\n        // if none of these are available for the ID\n        getProxyOrBlob: function(id) {\n            return (handler.getProxy && handler.getProxy(id)) ||\n                (handler.getFile && handler.getFile(id));\n        },\n\n        initHandler: function() {\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\n\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\n                options,\n                {\n                    getCustomResumeData: options.getCustomResumeData,\n                    getDataByUuid: options.getDataByUuid,\n                    getName: options.getName,\n                    getSize: options.getSize,\n                    getUuid: options.getUuid,\n                    log: log,\n                    onCancel: options.onCancel,\n                    onProgress: options.onProgress,\n                    onUuidChanged: options.onUuidChanged,\n                    onFinalizing: function(id) {\n                        options.setStatus(id, qq.status.UPLOAD_FINALIZING);\n                    }\n                }\n            );\n\n            if (handler._removeExpiredChunkingRecords) {\n                handler._removeExpiredChunkingRecords();\n            }\n        },\n\n        isDeferredEligibleForUpload: function(id) {\n            return options.isQueued(id);\n        },\n\n        // For Blobs that are part of a group of generated images, along with a reference image,\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\n        // even if some async processing must be completed on one or more Blobs first.\n        maybeDefer: function(id, blob) {\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\n            // and then submit the upload to the specific handler once the blob is available.\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\n\n                // Blob creation may take some time, so the caller may want to update the\n                // UI to indicate that an operation is in progress, even before the actual\n                // upload begins and an onUpload callback is invoked.\n                options.onUploadPrep(id);\n\n                log(\"Attempting to generate a blob on-demand for \" + id);\n                blob.create().then(function(generatedBlob) {\n                    log(\"Generated an on-demand blob for \" + id);\n\n                    // Update record associated with this file by providing the generated Blob\n                    handler.updateBlob(id, generatedBlob);\n\n                    // Propagate the size for this generated Blob\n                    options.setSize(id, generatedBlob.size);\n\n                    // Order handler to recalculate chunking possibility, if applicable\n                    handler.reevaluateChunking(id);\n\n                    upload.maybeSendDeferredFiles(id);\n                },\n\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\n                function(errorMessage) {\n                    var errorResponse = {};\n\n                    if (errorMessage) {\n                        errorResponse.error = errorMessage;\n                    }\n\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\n\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\n                    upload.maybeSendDeferredFiles(id);\n                    connectionManager.free(id);\n                });\n            }\n            else {\n                return upload.maybeSendDeferredFiles(id);\n            }\n\n            return false;\n        },\n\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\n        maybeSendDeferredFiles: function(id) {\n            var idsInGroup = options.getIdsInProxyGroup(id),\n                uploadedThisId = false;\n\n            if (idsInGroup && idsInGroup.length) {\n                log(\"Maybe ready to upload proxy group file \" + id);\n\n                qq.each(idsInGroup, function(idx, idInGroup) {\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\n                        uploadedThisId = idInGroup === id;\n                        upload.now(idInGroup);\n                    }\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\n                        return false;\n                    }\n                });\n            }\n            else {\n                uploadedThisId = true;\n                upload.now(id);\n            }\n\n            return uploadedThisId;\n        },\n\n        maybeNewUuid: function(id, response) {\n            if (response.newUuid !== undefined) {\n                options.onUuidChanged(id, response.newUuid);\n            }\n        },\n\n        // The response coming from handler implementations may be in various formats.\n        // Instead of hoping a promise nested 5 levels deep will always return an object\n        // as its first param, let's just normalize the response here.\n        normalizeResponse: function(originalResponse, successful) {\n            var response = originalResponse;\n\n            // The passed \"response\" param may not be a response at all.\n            // It could be a string, detailing the error, for example.\n            if (!qq.isObject(originalResponse)) {\n                response = {};\n\n                if (qq.isString(originalResponse) && !successful) {\n                    response.error = originalResponse;\n                }\n            }\n\n            response.success = successful;\n\n            return response;\n        },\n\n        now: function(id) {\n            var name = options.getName(id);\n\n            if (!controller.isValid(id)) {\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\n            }\n\n            options.onUpload(id, name).then(\n                function(response) {\n                    if (response && response.pause) {\n                        options.setStatus(id, qq.status.PAUSED);\n                        handler.pause(id);\n                        connectionManager.free(id);\n                    }\n                    else {\n                        if (chunkingPossible && handler._shouldChunkThisFile(id)) {\n                            chunked.sendNext(id);\n                        }\n                        else {\n                            simple.send(id, name);\n                        }\n                    }\n                },\n\n                function(error) {\n                    error = error || {};\n\n                    log(id + \" upload start aborted due to rejected onUpload Promise - details: \" + error, \"error\");\n\n                    if (!options.onAutoRetry(id, name, error.responseJSON || {})) {\n                        var response = upload.normalizeResponse(error.responseJSON, false);\n                        upload.cleanup(id, response);\n                    }\n                }\n            );\n        },\n\n        start: function(id) {\n            var blobToUpload = upload.getProxyOrBlob(id);\n\n            if (blobToUpload) {\n                return upload.maybeDefer(id, blobToUpload);\n            }\n            else {\n                upload.now(id);\n                return true;\n            }\n        }\n    };\n\n    qq.extend(this, {\n        /**\n         * Adds file or file input to the queue\n         **/\n        add: function(id, file) {\n            handler.add.apply(this, arguments);\n        },\n\n        /**\n         * Sends the file identified by id\n         */\n        upload: function(id) {\n            if (connectionManager.open(id)) {\n                return upload.start(id);\n            }\n            return false;\n        },\n\n        retry: function(id) {\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\n            // any more failures at this point.\n            if (concurrentChunkingPossible) {\n                handler._getFileState(id).temp.ignoreFailure = false;\n            }\n\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\n            // Just go ahead and ask the handler to upload again.\n            if (connectionManager.isUsingConnection(id)) {\n                return upload.start(id);\n            }\n\n            // If we are attempting to retry a file that is not currently consuming a connection,\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\n            // before the retry commences.\n            else {\n                return controller.upload(id);\n            }\n        },\n\n        /**\n         * Cancels file upload by id\n         */\n        cancel: function(id) {\n            var cancelRetVal = handler.cancel(id);\n\n            if (qq.isGenericPromise(cancelRetVal)) {\n                cancelRetVal.then(function() {\n                    upload.cancel(id);\n                });\n            }\n            else if (cancelRetVal !== false) {\n                upload.cancel(id);\n            }\n        },\n\n        /**\n         * Cancels all queued or in-progress uploads\n         */\n        cancelAll: function() {\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\n                i;\n\n            // ensure files are cancelled in reverse order which they were added\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\n            if (waitingOrConnected.length) {\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\n                    controller.cancel(waitingOrConnected[i]);\n                }\n            }\n\n            connectionManager.reset();\n        },\n\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\n        // Undefined if no file record is available.\n        getFile: function(id) {\n            if (handler.getProxy && handler.getProxy(id)) {\n                return handler.getProxy(id).referenceBlob;\n            }\n\n            return handler.getFile && handler.getFile(id);\n        },\n\n        // Returns true if the Blob associated with the ID is related to a proxy s\n        isProxied: function(id) {\n            return !!(handler.getProxy && handler.getProxy(id));\n        },\n\n        getInput: function(id) {\n            if (handler.getInput) {\n                return handler.getInput(id);\n            }\n        },\n\n        reset: function() {\n            log(\"Resetting upload handler\");\n            controller.cancelAll();\n            connectionManager.reset();\n            handler.reset();\n        },\n\n        expunge: function(id) {\n            if (controller.isValid(id)) {\n                return handler.expunge(id);\n            }\n        },\n\n        /**\n         * Determine if the file exists.\n         */\n        isValid: function(id) {\n            return handler.isValid(id);\n        },\n\n        hasResumeRecord: function(id) {\n            var key = handler.isValid(id) &&\n                handler._getLocalStorageId &&\n                handler._getLocalStorageId(id);\n\n            if (key) {\n                return !!localStorage.getItem(key);\n            }\n\n            return false;\n        },\n\n        getResumableFilesData: function() {\n            if (handler.getResumableFilesData) {\n                return handler.getResumableFilesData();\n            }\n            return [];\n        },\n\n        /**\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\n         * will be undefined.\n         *\n         * @param id Internal file ID\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\n         */\n        getThirdPartyFileId: function(id) {\n            if (controller.isValid(id)) {\n                return handler.getThirdPartyFileId(id);\n            }\n        },\n\n        /**\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\n         * @param id ID of the upload/file to pause\n         * @returns {boolean} true if the upload was paused\n         */\n        pause: function(id) {\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\n                connectionManager.free(id);\n                handler.moveInProgressToRemaining(id);\n                return true;\n            }\n            return false;\n        },\n\n        isAttemptingResume: function(id) {\n            return !!handler.isAttemptingResume && handler.isAttemptingResume(id);\n        },\n\n        // True if the file is eligible for pause/resume.\n        isResumable: function(id) {\n            return !!handler.isResumable && handler.isResumable(id);\n        }\n    });\n\n    qq.extend(options, o);\n    log = options.log;\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\n\n    preventRetryResponse = (function() {\n        var response = {};\n\n        response[options.preventRetryParam] = true;\n\n        return response;\n    }());\n\n    upload.initHandler();\n};\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        getChunkSize = function(id) {\n            var fileState = handler._getFileState(id);\n\n            if (fileState.chunkSize) {\n                return fileState.chunkSize;\n            }\n\n            else {\n                var chunkSize = chunking.partSize;\n\n                if (qq.isFunction(chunkSize)) {\n                    chunkSize = chunkSize(id, getSize(id));\n                }\n\n                fileState.chunkSize = chunkSize;\n                return chunkSize;\n            }\n        },\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log,\n        getCustomResumeData = proxy.getCustomResumeData;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                if (uploadData.customResumeData) {\n                    data.customResumeData = uploadData.customResumeData;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isAttemptingResume: function(id) {\n            return handler._getFileState(id).attemptingResume;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) &&\n                !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var fileState = handler._getFileState(id) || {},\n                chunkingState =  fileState.chunking || {},\n                inProgress = optInProgress || chunkingState.inProgress,\n                remaining = optRemaining || chunkingState.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = getChunkSize(id),\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/FineUploader/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = getChunkSize(id),\n                endpoint = getEndpoint(id),\n                customKeys = resume.customKeys(id),\n                localStorageId = qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n\n            customKeys.forEach(function(key) {\n                localStorageId += \"-\" + key;\n            });\n\n            return localStorageId;\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = getChunkSize(id);\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.customResumeData = persistedData.customResumeData;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                var customResumeData = getCustomResumeData(id);\n\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now(),\n                };\n\n                if (customResumeData) {\n                    persistedData.customResumeData = customResumeData;\n                }\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*globals qq */\nqq.azure = qq.azure || {};\nqq.azure.util = qq.azure.util || (function() {\n    \"use strict\";\n\n    return {\n        AZURE_PARAM_PREFIX: \"x-ms-meta-\",\n\n        /** Test if a request header is actually a known Azure parameter. See: https://msdn.microsoft.com/en-us/library/azure/dd179451.aspx\n         *\n         * @param name Name of the Request Header parameter.\n         * @returns {Boolean} Test result.\n         */\n        _paramNameMatchesAzureParameter: function(name) {\n            switch (name) {\n                case \"Cache-Control\":\n                case \"Content-Disposition\":\n                case \"Content-Encoding\":\n                case \"Content-MD5\":\n                case \"x-ms-blob-content-encoding\":\n                case \"x-ms-blob-content-disposition\":\n                case \"x-ms-blob-content-md5\":\n                case \"x-ms-blob-cache-control\":\n                    return true;\n                default:\n                    return false;\n            }\n        },\n\n        /** Create Prefixed request headers which are appropriate for Azure.\n         *\n         * If the request header is appropriate for Azure (e.g. Cache-Control) then it should be\n         * passed along without a metadata prefix. For all other request header parameter names,\n         * qq.azure.util.AZURE_PARAM_PREFIX should be prepended.\n         *\n         * @param name Name of the Request Header parameter to construct a (possibly) prefixed name.\n         * @returns {String} A valid Request Header parameter name.\n         */\n        _getPrefixedParamName: function(name) {\n            if (qq.azure.util._paramNameMatchesAzureParameter(name)) {\n                return name;\n            }\n            else {\n                return qq.azure.util.AZURE_PARAM_PREFIX + name;\n            }\n        },\n\n        getParamsAsHeaders: function(params) {\n            var headers = {};\n\n            qq.each(params, function(name, val) {\n                var headerName = qq.azure.util._getPrefixedParamName(name),\n                    value = null;\n\n                if (qq.isFunction(val)) {\n                    value = String(val());\n                }\n                else if (qq.isObject(val)) {\n                    qq.extend(headers, qq.azure.util.getParamsAsHeaders(val));\n                }\n                else {\n                    value = String(val);\n                }\n\n                if (value !== null) {\n                    if (qq.azure.util._paramNameMatchesAzureParameter(name)) {\n                        headers[headerName] = value;\n                    } else {\n                        headers[headerName] = encodeURIComponent(value);\n                    }\n                }\n            });\n\n            return headers;\n        },\n\n        parseAzureError: function(responseText, log) {\n            var domParser = new DOMParser(),\n                responseDoc = domParser.parseFromString(responseText, \"application/xml\"),\n                errorTag = responseDoc.getElementsByTagName(\"Error\")[0],\n                errorDetails = {},\n                codeTag, messageTag;\n\n            log(\"Received error response: \" + responseText, \"error\");\n\n            if (errorTag) {\n                messageTag = errorTag.getElementsByTagName(\"Message\")[0];\n                if (messageTag) {\n                    errorDetails.message = messageTag.textContent;\n                }\n\n                codeTag = errorTag.getElementsByTagName(\"Code\")[0];\n                if (codeTag) {\n                    errorDetails.code = codeTag.textContent;\n                }\n\n                log(\"Parsed Azure error: \" + JSON.stringify(errorDetails), \"error\");\n\n                return errorDetails;\n            }\n        }\n    };\n}());\n","/*globals qq*/\n/**\n * Defines the public API for non-traditional FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.nonTraditionalBasePublicApi = {\n        setUploadSuccessParams: function(params, id) {\n            this._uploadSuccessParamsStore.set(params, id);\n        },\n        setUploadSuccessEndpoint: function(endpoint, id) {\n            this._uploadSuccessEndpointStore.set(endpoint, id);\n        }\n    };\n\n    qq.nonTraditionalBasePrivateApi = {\n        /**\n         * When the upload has completed, if it is successful, send a request to the `successEndpoint` (if defined).\n         * This will hold up the call to the `onComplete` callback until we have determined success of the upload\n         * according to the local server, if a `successEndpoint` has been defined by the integrator.\n         *\n         * @param id ID of the completed upload\n         * @param name Name of the associated item\n         * @param result Object created from the server's parsed JSON response.\n         * @param xhr Associated XmlHttpRequest, if this was used to send the request.\n         * @returns {boolean || qq.Promise} true/false if success can be determined immediately, otherwise a `qq.Promise`\n         * if we need to ask the server.\n         * @private\n         */\n        _onComplete: function(id, name, result, xhr) {\n            var success = result.success ? true : false,\n                self = this,\n                onCompleteArgs = arguments,\n                successEndpoint = this._uploadSuccessEndpointStore.get(id),\n                successCustomHeaders = this._options.uploadSuccess.customHeaders,\n                successMethod = this._options.uploadSuccess.method,\n                cors = this._options.cors,\n                promise = new qq.Promise(),\n                uploadSuccessParams = this._uploadSuccessParamsStore.get(id),\n                fileParams = this._paramsStore.get(id),\n\n                // If we are waiting for confirmation from the local server, and have received it,\n                // include properties from the local server response in the `response` parameter\n                // sent to the `onComplete` callback, delegate to the parent `_onComplete`, and\n                // fulfill the associated promise.\n                onSuccessFromServer = function(successRequestResult) {\n                    delete self._failedSuccessRequestCallbacks[id];\n                    qq.extend(result, successRequestResult);\n                    qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                    promise.success(successRequestResult);\n                },\n\n                // If the upload success request fails, attempt to re-send the success request (via the core retry code).\n                // The entire upload may be restarted if the server returns a \"reset\" property with a value of true as well.\n                onFailureFromServer = function(successRequestResult) {\n                    var callback = submitSuccessRequest;\n\n                    qq.extend(result, successRequestResult);\n\n                    if (result && result.reset) {\n                        callback = null;\n                    }\n\n                    if (!callback) {\n                        delete self._failedSuccessRequestCallbacks[id];\n                    }\n                    else {\n                        self._failedSuccessRequestCallbacks[id] = callback;\n                    }\n\n                    if (!self._onAutoRetry(id, name, result, xhr, callback)) {\n                        qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                        promise.failure(successRequestResult);\n                    }\n                },\n                submitSuccessRequest,\n                successAjaxRequester;\n\n            // Ask the local server if the file sent is ok.\n            if (success && successEndpoint) {\n                successAjaxRequester = new qq.UploadSuccessAjaxRequester({\n                    endpoint: successEndpoint,\n                    method: successMethod,\n                    customHeaders: successCustomHeaders,\n                    cors: cors,\n                    log: qq.bind(this.log, this)\n                });\n\n                // combine custom params and default params\n                qq.extend(uploadSuccessParams, self._getEndpointSpecificParams(id, result, xhr), true);\n\n                // include any params associated with the file\n                fileParams && qq.extend(uploadSuccessParams, fileParams, true);\n\n                submitSuccessRequest = qq.bind(function() {\n                    successAjaxRequester.sendSuccessRequest(id, uploadSuccessParams)\n                        .then(onSuccessFromServer, onFailureFromServer);\n                }, self);\n\n                submitSuccessRequest();\n\n                return promise;\n            }\n\n            // If we are not asking the local server about the file, just delegate to the parent `_onComplete`.\n            return qq.FineUploaderBasic.prototype._onComplete.apply(this, arguments);\n        },\n\n        // If the failure occurred on an upload success request (and a reset was not ordered), try to resend that instead.\n        _manualRetry: function(id) {\n            var successRequestCallback = this._failedSuccessRequestCallbacks[id];\n\n            return qq.FineUploaderBasic.prototype._manualRetry.call(this, id, successRequestCallback);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploaderBasic mode w/ support for uploading to Azure, which provides all the basic\n * functionality of Fine Uploader Basic as well as code to handle uploads directly to Azure.\n * Some inherited options and API methods have a special meaning in the context of the Azure uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.azure.FineUploaderBasic = function(o) {\n        if (!qq.supportedFeatures.ajaxUploading) {\n            throw new qq.Error(\"Uploading directly to Azure is not possible in this browser.\");\n        }\n\n        var options = {\n            signature: {\n                endpoint: null,\n\n                customHeaders: {}\n            },\n\n            // 'uuid', 'filename', or a function which may be promissory\n            blobProperties: {\n                name: \"uuid\"\n            },\n\n            uploadSuccess: {\n                endpoint: null,\n\n                method: \"POST\",\n\n                // In addition to the default params sent by Fine Uploader\n                params: {},\n\n                customHeaders: {}\n            },\n\n            chunking: {\n                // If this is increased, Azure may respond with a 413\n                partSize: 4000000,\n                // Don't chunk files less than this size\n                minFileSize: 4000001\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Call base module\n        qq.FineUploaderBasic.call(this, options);\n\n        this._uploadSuccessParamsStore = this._createStore(this._options.uploadSuccess.params);\n        this._uploadSuccessEndpointStore = this._createStore(this._options.uploadSuccess.endpoint);\n\n        // This will hold callbacks for failed uploadSuccess requests that will be invoked on retry.\n        // Indexed by file ID.\n        this._failedSuccessRequestCallbacks = {};\n\n        // Holds blob names for file representations constructed from a session request.\n        this._cannedBlobNames = {};\n    };\n\n    // Inherit basic public & private API methods.\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.basePublicApi);\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.basePrivateApi);\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.nonTraditionalBasePublicApi);\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.nonTraditionalBasePrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.azure.FineUploaderBasic.prototype, {\n        getBlobName: function(id) {\n            /* jshint eqnull:true */\n            if (this._cannedBlobNames[id] == null) {\n                return this._handler.getThirdPartyFileId(id);\n            }\n            return this._cannedBlobNames[id];\n        },\n\n        _getEndpointSpecificParams: function(id) {\n            return {\n                blob: this.getBlobName(id),\n                uuid: this.getUuid(id),\n                name: this.getName(id),\n                container: this._endpointStore.get(id)\n            };\n        },\n\n        _createUploadHandler: function() {\n            return qq.FineUploaderBasic.prototype._createUploadHandler.call(this,\n                {\n                    signature: this._options.signature,\n                    onGetBlobName: qq.bind(this._determineBlobName, this),\n                    deleteBlob: qq.bind(this._deleteBlob, this, true)\n                },\n                \"azure\");\n        },\n\n        _determineBlobName: function(id) {\n            var self = this,\n                blobNameOptionValue = this._options.blobProperties.name,\n                uuid = this.getUuid(id),\n                filename = this.getName(id),\n                fileExtension = qq.getExtension(filename),\n                blobNameToUse = uuid;\n\n            if (qq.isString(blobNameOptionValue)) {\n                switch (blobNameOptionValue) {\n                    case \"uuid\":\n                        if (fileExtension !== undefined) {\n                            blobNameToUse += \".\" + fileExtension;\n                        }\n                        return new qq.Promise().success(blobNameToUse);\n                    case \"filename\":\n                        return new qq.Promise().success(filename);\n                    default:\n                        return new qq.Promise.failure(\"Invalid blobName option value - \" + blobNameOptionValue);\n                }\n            }\n            else {\n                return blobNameOptionValue.call(this, id);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id;\n\n            /* jshint eqnull:true */\n            if (sessionData.blobName == null) {\n                throw new qq.Error(\"Did not find blob name property in server session response.  This is required!\");\n            }\n            else {\n                id = qq.FineUploaderBasic.prototype._addCannedFile.apply(this, arguments);\n                this._cannedBlobNames[id] = sessionData.blobName;\n            }\n\n            return id;\n        },\n\n        _deleteBlob: function(relatedToCancel, id) {\n            var self = this,\n                deleteBlobSasUri = {},\n                blobUriStore = {\n                    get: function(id) {\n                        return self._endpointStore.get(id) + \"/\" + self.getBlobName(id);\n                    }\n                },\n                deleteFileEndpointStore = {\n                    get: function(id) {\n                        return deleteBlobSasUri[id];\n                    }\n                },\n                getSasSuccess = function(id, sasUri) {\n                    deleteBlobSasUri[id] = sasUri;\n                    deleteBlob.send(id);\n                },\n                getSasFailure = function(id, reason, xhr) {\n                    if (relatedToCancel) {\n                        self.log(\"Will cancel upload, but cannot remove uncommitted parts from Azure due to issue retrieving SAS\", \"error\");\n                        qq.FineUploaderBasic.prototype._onCancel.call(self, id, self.getName(id));\n                    }\n                    else {\n                        self._onDeleteComplete(id, xhr, true);\n                        self._options.callbacks.onDeleteComplete(id, xhr, true);\n                    }\n                },\n                deleteBlob = new qq.azure.DeleteBlob({\n                    endpointStore: deleteFileEndpointStore,\n                    log: qq.bind(self.log, self),\n                    onDelete: function(id) {\n                        self._onDelete(id);\n                        self._options.callbacks.onDelete(id);\n                    },\n                    onDeleteComplete: function(id, xhrOrXdr, isError) {\n                        delete deleteBlobSasUri[id];\n\n                        if (isError) {\n                            if (relatedToCancel) {\n                                self.log(\"Will cancel upload, but failed to remove uncommitted parts from Azure.\", \"error\");\n                            }\n                            else {\n                                qq.azure.util.parseAzureError(xhrOrXdr.responseText, qq.bind(self.log, self));\n                            }\n                        }\n\n                        if (relatedToCancel) {\n                            qq.FineUploaderBasic.prototype._onCancel.call(self, id, self.getName(id));\n                            self.log(\"Deleted uncommitted blob chunks for \" + id);\n                        }\n                        else {\n                            self._onDeleteComplete(id, xhrOrXdr, isError);\n                            self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                        }\n                    }\n                }),\n                getSas = new qq.azure.GetSas({\n                    cors: this._options.cors,\n                    customHeaders: this._options.signature.customHeaders,\n                    endpointStore: {\n                        get: function() {\n                            return self._options.signature.endpoint;\n                        }\n                    },\n                    restRequestVerb: deleteBlob.method,\n                    log: qq.bind(self.log, self)\n                });\n\n            getSas.request(id, blobUriStore.get(id)).then(\n                qq.bind(getSasSuccess, self, id),\n                qq.bind(getSasFailure, self, id));\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return {\n                sendDelete: function(id, uuid) {\n                    self._deleteBlob(false, id);\n                }\n            };\n        }\n    });\n}());\n","/*globals qq */\n/**\n * Upload handler used by the upload to Azure module that depends on File API support, and, therefore, makes use of\n * `XMLHttpRequest` level 2 to upload `File`s and `Blob`s directly to Azure Blob Storage containers via the\n * associated Azure API.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\n// TODO l18n for error messages returned to UI\nqq.azure.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        log = proxy.log,\n        cors = spec.cors,\n        endpointStore = spec.endpointStore,\n        paramsStore = spec.paramsStore,\n        signature = spec.signature,\n        filenameParam = spec.filenameParam,\n        minFileSizeForChunking = spec.chunking.minFileSize,\n        deleteBlob = spec.deleteBlob,\n        onGetBlobName = spec.onGetBlobName,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n\n        getBlobMetadata = function(id) {\n            var params = paramsStore.get(id);\n            params[filenameParam] = getName(id);\n            return params;\n        },\n\n        api = {\n            putBlob: new qq.azure.PutBlob({\n                getBlobMetadata: getBlobMetadata,\n                log: log\n            }),\n\n            putBlock: new qq.azure.PutBlock({\n                log: log\n            }),\n\n            putBlockList: new qq.azure.PutBlockList({\n                getBlobMetadata: getBlobMetadata,\n                log: log\n            }),\n\n            getSasForPutBlobOrBlock: new qq.azure.GetSas({\n                cors: cors,\n                customHeaders: signature.customHeaders,\n                endpointStore: {\n                    get: function() {\n                        return signature.endpoint;\n                    }\n                },\n                log: log,\n                restRequestVerb: \"PUT\"\n            })\n        };\n\n    function combineChunks(id) {\n        var promise = new qq.Promise();\n\n        getSignedUrl(id).then(function(sasUri) {\n            var mimeType = handler._getMimeType(id),\n                blockIdEntries = handler._getPersistableData(id).blockIdEntries;\n\n            api.putBlockList.send(id, sasUri, blockIdEntries, mimeType, function(xhr) {\n                handler._registerXhr(id, null, xhr, api.putBlockList);\n            })\n                .then(function(xhr) {\n                    log(\"Success combining chunks for id \" + id);\n                    promise.success({}, xhr);\n                }, function(xhr) {\n                    log(\"Attempt to combine chunks failed for id \" + id, \"error\");\n                    handleFailure(xhr, promise);\n                });\n\n        },\n        promise.failure);\n\n        return promise;\n    }\n\n    function determineBlobUrl(id) {\n        var containerUrl = endpointStore.get(id),\n            promise = new qq.Promise(),\n            getBlobNameSuccess = function(blobName) {\n                handler._setThirdPartyFileId(id, blobName);\n                promise.success(containerUrl + \"/\" + blobName);\n            },\n            getBlobNameFailure = function(reason) {\n                promise.failure(reason);\n            };\n\n        onGetBlobName(id).then(getBlobNameSuccess, getBlobNameFailure);\n\n        return promise;\n    }\n\n    function getSignedUrl(id, optChunkIdx) {\n        // We may have multiple SAS requests in progress for the same file, so we must include the chunk idx\n        // as part of the ID when communicating with the SAS ajax requester to avoid collisions.\n        var getSasId = optChunkIdx == null ? id : id + \".\" + optChunkIdx,\n\n            promise = new qq.Promise(),\n            getSasSuccess = function(sasUri) {\n                log(\"GET SAS request succeeded.\");\n                promise.success(sasUri);\n            },\n            getSasFailure = function(reason, getSasXhr) {\n                log(\"GET SAS request failed: \" + reason, \"error\");\n                promise.failure({error: \"Problem communicating with local server\"}, getSasXhr);\n            },\n            determineBlobUrlSuccess = function(blobUrl) {\n                api.getSasForPutBlobOrBlock.request(getSasId, blobUrl).then(\n                    getSasSuccess,\n                    getSasFailure\n                );\n            },\n            determineBlobUrlFailure = function(reason) {\n                log(qq.format(\"Failed to determine blob name for ID {} - {}\", id, reason), \"error\");\n                promise.failure({error: reason});\n            };\n\n        determineBlobUrl(id).then(determineBlobUrlSuccess, determineBlobUrlFailure);\n\n        return promise;\n    }\n\n    function handleFailure(xhr, promise) {\n        var azureError = qq.azure.util.parseAzureError(xhr.responseText, log),\n            errorMsg = \"Problem sending file to Azure\";\n\n        promise.failure({error: errorMsg,\n            azureError: azureError && azureError.message,\n            reset: xhr.status === 403\n        });\n    }\n\n    qq.extend(this, {\n        uploadChunk: function(params) {\n            var chunkIdx = params.chunkIdx;\n            var id = params.id;\n\n            var promise = new qq.Promise();\n\n            getSignedUrl(id, chunkIdx).then(\n                function(sasUri) {\n                    var xhr = handler._createXhr(id, chunkIdx),\n                    chunkData = handler._getChunkData(id, chunkIdx);\n\n                    handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n                    handler._registerXhr(id, chunkIdx, xhr, api.putBlock);\n\n                    // We may have multiple put block requests in progress for the same file, so we must include the chunk idx\n                    // as part of the ID when communicating with the put block ajax requester to avoid collisions.\n                    api.putBlock.upload(id + \".\" + chunkIdx, xhr, sasUri, chunkIdx, chunkData.blob).then(\n                        function(blockIdEntry) {\n                            if (!handler._getPersistableData(id).blockIdEntries) {\n                                handler._getPersistableData(id).blockIdEntries = [];\n                            }\n\n                            handler._getPersistableData(id).blockIdEntries.push(blockIdEntry);\n                            log(\"Put Block call succeeded for \" + id);\n                            promise.success({}, xhr);\n                        },\n                        function() {\n                            log(qq.format(\"Put Block call failed for ID {} on part {}\", id, chunkIdx), \"error\");\n                            handleFailure(xhr, promise);\n                        }\n                    );\n                },\n                promise.failure\n            );\n\n            return promise;\n        },\n\n        uploadFile: function(id) {\n            var promise = new qq.Promise(),\n                fileOrBlob = handler.getFile(id);\n\n            getSignedUrl(id).then(function(sasUri) {\n                var xhr = handler._createXhr(id);\n\n                handler._registerProgressHandler(id);\n\n                api.putBlob.upload(id, xhr, sasUri, fileOrBlob).then(\n                    function() {\n                        log(\"Put Blob call succeeded for \" + id);\n                        promise.success({}, xhr);\n                    },\n                    function() {\n                        log(\"Put Blob call failed for \" + id, \"error\");\n                        handleFailure(xhr, promise);\n                    }\n                );\n            },\n            promise.failure);\n\n            return promise;\n        }\n    });\n\n    qq.extend(this,\n        new qq.XhrUploadHandler({\n            options: qq.extend({namespace: \"azure\"}, spec),\n            proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n        }\n    ));\n\n    qq.override(this, function(super_) {\n        return {\n            expunge: function(id) {\n                var relatedToCancel = handler._wasCanceled(id),\n                    chunkingData = handler._getPersistableData(id),\n                    blockIdEntries = (chunkingData && chunkingData.blockIdEntries) || [];\n\n                if (relatedToCancel && blockIdEntries.length > 0) {\n                    deleteBlob(id);\n                }\n\n                super_.expunge(id);\n            },\n\n            finalizeChunks: function(id) {\n                return combineChunks(id);\n            },\n\n            _shouldChunkThisFile: function(id) {\n                var maybePossible = super_._shouldChunkThisFile(id);\n                return maybePossible && getSize(id) >= minFileSizeForChunking;\n            }\n        };\n    });\n};\n","/* globals qq */\n/**\n * Sends a GET request to the integrator's server, which should return a Shared Access Signature URI used to\n * make a specific request on a Blob via the Azure REST API.\n */\nqq.azure.GetSas = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            customHeaders: {},\n            restRequestVerb: \"PUT\",\n            endpointStore: null,\n            log: function(str, level) {}\n        },\n        requestPromises = {};\n\n    qq.extend(options, o);\n\n    function sasResponseReceived(id, xhr, isError) {\n        var promise = requestPromises[id];\n\n        if (isError) {\n            promise.failure(\"Received response code \" + xhr.status, xhr);\n        }\n        else {\n            if (xhr.responseText.length) {\n                promise.success(xhr.responseText);\n            }\n            else {\n                promise.failure(\"Empty response.\", xhr);\n            }\n        }\n\n        delete requestPromises[id];\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        successfulResponseCodes: {\n            GET: [200]\n        },\n        contentType: null,\n        customHeaders: options.customHeaders,\n        endpointStore: options.endpointStore,\n        cors: options.cors,\n        log: options.log,\n        onComplete: sasResponseReceived\n    }));\n\n    qq.extend(this, {\n        request: function(id, blobUri) {\n            var requestPromise = new qq.Promise(),\n                restVerb = options.restRequestVerb;\n\n            options.log(qq.format(\"Submitting GET SAS request for a {} REST request related to file ID {}.\", restVerb, id));\n\n            requestPromises[id] = requestPromise;\n\n            requester.initTransport(id)\n                .withParams({\n                    bloburi: blobUri,\n                    _method: restVerb\n                })\n                .withCacheBuster()\n                .send();\n\n            return requestPromise;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Sends a POST request to the server to notify it of a successful upload to an endpoint.  The server is expected to indicate success\n * or failure via the response status.  Specific information about the failure can be passed from the server via an `error`\n * property (by default) in an \"application/json\" response.\n *\n * @param o Options associated with all requests.\n * @constructor\n */\nqq.UploadSuccessAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingRequests = [],\n        options = {\n            method: \"POST\",\n            endpoint: null,\n            maxConnections: 3,\n            customHeaders: {},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, o);\n\n    function handleSuccessResponse(id, xhrOrXdr, isError) {\n        var promise = pendingRequests[id],\n            responseJson = xhrOrXdr.responseText,\n            successIndicator = {success: true},\n            failureIndicator = {success: false},\n            parsedResponse;\n\n        delete pendingRequests[id];\n\n        options.log(qq.format(\"Received the following response body to an upload success request for id {}: {}\", id, responseJson));\n\n        try {\n            parsedResponse = qq.parseJson(responseJson);\n\n            // If this is a cross-origin request, the server may return a 200 response w/ error or success properties\n            // in order to ensure any specific error message is picked up by Fine Uploader for all browsers,\n            // since XDomainRequest (used in IE9 and IE8) doesn't give you access to the\n            // response body for an \"error\" response.\n            if (isError || (parsedResponse && (parsedResponse.error || parsedResponse.success === false))) {\n                options.log(\"Upload success request was rejected by the server.\", \"error\");\n                promise.failure(qq.extend(parsedResponse, failureIndicator));\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(qq.extend(parsedResponse, successIndicator));\n            }\n        }\n        catch (error) {\n            // This will be executed if a JSON response is not present.  This is not mandatory, so account for this properly.\n            if (isError) {\n                options.log(qq.format(\"Your server indicated failure in its upload success request response for id {}!\", id), \"error\");\n                promise.failure(failureIndicator);\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(successIndicator);\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        method: options.method,\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        paramsStore: options.paramsStore,\n        maxConnections: options.maxConnections,\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: handleSuccessResponse,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends a request to the server, notifying it that a recently submitted file was successfully sent.\n         *\n         * @param id ID of the associated file\n         * @param spec `Object` with the properties that correspond to important values that we want to\n         * send to the server with this request.\n         * @returns {qq.Promise} A promise to be fulfilled when the response has been received and parsed.  The parsed\n         * payload of the response will be passed into the `failure` or `success` promise method.\n         */\n        sendSuccessRequest: function(id, spec) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting upload success request/notification for \" + id);\n\n            requester.initTransport(id)\n                .withParams(spec)\n                .send();\n\n            pendingRequests[id] = promise;\n\n            return promise;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Delete Blob Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179413.aspx.\n */\nqq.azure.DeleteBlob = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"DELETE\",\n        options = {\n            endpointStore: {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhr, isError) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [202];\n            return codes;\n        }()),\n        contentType: null,\n        endpointStore: options.endpointStore,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete\n    }));\n\n    qq.extend(this, {\n        method: method,\n        send: function(id) {\n            options.log(\"Submitting Delete Blob request for \" + id);\n\n            return requester.initTransport(id)\n                .send();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Put Blob Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179451.aspx.\n */\nqq.azure.PutBlob = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"PUT\",\n        options = {\n            getBlobMetadata: function(id) {},\n            log: function(str, level) {}\n        },\n        endpoints = {},\n        promises = {},\n        endpointHandler = {\n            get: function(id) {\n                return endpoints[id];\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [201];\n            return codes;\n        }()),\n        contentType: null,\n        customHeaders: function(id) {\n            var params = options.getBlobMetadata(id),\n                headers = qq.azure.util.getParamsAsHeaders(params);\n\n            headers[\"x-ms-blob-type\"] = \"BlockBlob\";\n\n            return headers;\n        },\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete endpoints[id];\n            delete promises[id];\n\n            if (isError) {\n                promise.failure();\n            }\n            else {\n                promise.success();\n            }\n        }\n    }));\n\n    qq.extend(this, {\n        method: method,\n        upload: function(id, xhr, url, file) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting Put Blob request for \" + id);\n\n            promises[id] = promise;\n            endpoints[id] = url;\n\n            requester.initTransport(id)\n                .withPayload(file)\n                .withHeaders({\"Content-Type\": file.type})\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Put Block Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd135726.aspx.\n */\nqq.azure.PutBlock = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"PUT\",\n        blockIdEntries = {},\n        promises = {},\n        options = {\n            log: function(str, level) {}\n        },\n        endpoints = {},\n        endpointHandler = {\n            get: function(id) {\n                return endpoints[id];\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [201];\n            return codes;\n        }()),\n        contentType: null,\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id],\n                blockIdEntry = blockIdEntries[id];\n\n            delete endpoints[id];\n            delete promises[id];\n            delete blockIdEntries[id];\n\n            if (isError) {\n                promise.failure();\n            }\n            else {\n                promise.success(blockIdEntry);\n            }\n        }\n    }));\n\n    function createBlockId(partNum) {\n        var digits = 5,\n            zeros = new Array(digits + 1).join(\"0\"),\n            paddedPartNum = (zeros + partNum).slice(-digits);\n\n        return btoa(paddedPartNum);\n    }\n\n    qq.extend(this, {\n        method: method,\n        upload: function(id, xhr, sasUri, partNum, blob) {\n            var promise = new qq.Promise(),\n                blockId = createBlockId(partNum);\n\n            promises[id] = promise;\n\n            options.log(qq.format(\"Submitting Put Block request for {} = part {}\", id, partNum));\n\n            endpoints[id] = qq.format(\"{}&comp=block&blockid={}\", sasUri, encodeURIComponent(blockId));\n            blockIdEntries[id] = {part: partNum, id: blockId};\n\n            requester.initTransport(id)\n                .withPayload(blob)\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Put Block List Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179467.aspx.\n */\nqq.azure.PutBlockList = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"PUT\",\n        promises = {},\n        options = {\n            getBlobMetadata: function(id) {},\n            log: function(str, level) {}\n        },\n        endpoints = {},\n        endpointHandler = {\n            get: function(id) {\n                return endpoints[id];\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [201];\n            return codes;\n        }()),\n        customHeaders: function(id) {\n            var params = options.getBlobMetadata(id);\n\n            return qq.azure.util.getParamsAsHeaders(params);\n        },\n        contentType: \"text/plain\",\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onSend: function() {},\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete endpoints[id];\n            delete promises[id];\n\n            if (isError) {\n                promise.failure(xhr);\n            }\n            else {\n                promise.success(xhr);\n            }\n\n        }\n    }));\n\n    function createRequestBody(blockIdEntries) {\n        var doc = document.implementation.createDocument(null, \"BlockList\", null);\n\n        // If we don't sort the block ID entries by part number, the file will be combined incorrectly by Azure\n        blockIdEntries.sort(function(a, b) {\n            return a.part - b.part;\n        });\n\n        // Construct an XML document for each pair of etag/part values that correspond to part uploads.\n        qq.each(blockIdEntries, function(idx, blockIdEntry) {\n            var latestEl = doc.createElement(\"Latest\"),\n                latestTextEl = doc.createTextNode(blockIdEntry.id);\n\n            latestEl.appendChild(latestTextEl);\n            qq(doc).children()[0].appendChild(latestEl);\n        });\n\n        // Turn the resulting XML document into a string fit for transport.\n        return new XMLSerializer().serializeToString(doc);\n    }\n\n    qq.extend(this, {\n        method: method,\n        send: function(id, sasUri, blockIdEntries, fileMimeType, registerXhrCallback) {\n            var promise = new qq.Promise(),\n                blockIdsXml = createRequestBody(blockIdEntries),\n                xhr;\n\n            promises[id] = promise;\n\n            options.log(qq.format(\"Submitting Put Block List request for {}\", id));\n\n            endpoints[id] = qq.format(\"{}&comp=blocklist\", sasUri);\n\n            xhr = requester.initTransport(id)\n                .withPayload(blockIdsXml)\n                .withHeaders({\"x-ms-blob-content-type\": fileMimeType})\n                .send();\n            registerXhrCallback(xhr);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                file.qqPath = extractDirectoryPath(entry);\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    function extractDirectoryPath(entry) {\n        var name = entry.name,\n            fullPath = entry.fullPath,\n            indexOfNameInFullPath = fullPath.lastIndexOf(name);\n\n        // remove file name from full path string\n        fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n        // remove leading slash in full path string\n        if (fullPath.charAt(0) === \"/\") {\n            fullPath = fullPath.substr(1);\n        }\n\n        return fullPath;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            if (isFileDrag(e)) {\n                e.preventDefault();\n                maybeHideDropZones();\n            }\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n\n    this._testing = {};\n    this._testing.extractDirectoryPath = extractDirectoryPath;\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest &&\n                (\n                    (dt.files && dt.files.length) ||                                     // Valid for drop events with files\n                    (!isSafari && dt.types.contains && dt.types.contains(\"Files\")) ||  // Valid in Chrome/Firefox\n                    (dt.types.includes && dt.types.includes(\"Files\"))               // Valid in IE\n                );\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n\n    this._testing = {};\n    this._testing.isValidFileDrag = isValidFileDrag;\n};\n","/*globals qq */\n/**\n * Defines the public API for FineUploader mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.uiPublicApi = {\n        addInitialFiles: function(cannedFileList) {\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\n            this._templating.addCacheToDom();\n        },\n\n        clearStoredFiles: function() {\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\n            this._templating.clearFiles();\n        },\n\n        addExtraDropzone: function(element) {\n            this._dnd && this._dnd.setupExtraDropzone(element);\n        },\n\n        removeExtraDropzone: function(element) {\n            if (this._dnd) {\n                return this._dnd.removeDropzone(element);\n            }\n        },\n\n        getItemByFileId: function(id) {\n            if (!this._templating.isHiddenForever(id)) {\n                return this._templating.getFileContainer(id);\n            }\n        },\n\n        reset: function() {\n            this._parent.prototype.reset.apply(this, arguments);\n            this._templating.reset();\n\n            if (!this._options.button && this._templating.getButton()) {\n                this._defaultButtonId = this._createUploadButton({\n                    element: this._templating.getButton(),\n                    title: this._options.text.fileInputTitle\n                }).getButtonId();\n            }\n\n            if (this._dnd) {\n                this._dnd.dispose();\n                this._dnd = this._setupDragAndDrop();\n            }\n\n            this._totalFilesInBatch = 0;\n            this._filesInBatchAddedToUi = 0;\n\n            this._setupClickAndEditEventHandlers();\n        },\n\n        setName: function(id, newName) {\n            var formattedFilename = this._options.formatFileName(newName);\n\n            this._parent.prototype.setName.apply(this, arguments);\n            this._templating.updateFilename(id, formattedFilename);\n        },\n\n        pauseUpload: function(id) {\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\n\n            paused && this._templating.uploadPaused(id);\n            return paused;\n        },\n\n        continueUpload: function(id) {\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\n\n            continued && this._templating.uploadContinued(id);\n            return continued;\n        },\n\n        getId: function(fileContainerOrChildEl) {\n            return this._templating.getFileId(fileContainerOrChildEl);\n        },\n\n        getDropTarget: function(fileId) {\n            var file = this.getFile(fileId);\n\n            return file.qqDropTarget;\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploader mode.\n     */\n    qq.uiPrivateApi = {\n        _getButton: function(buttonId) {\n            var button = this._parent.prototype._getButton.apply(this, arguments);\n\n            if (!button) {\n                if (buttonId === this._defaultButtonId) {\n                    button = this._templating.getButton();\n                }\n            }\n\n            return button;\n        },\n\n        _removeFileItem: function(fileId) {\n            this._templating.removeFile(fileId);\n        },\n\n        _setupClickAndEditEventHandlers: function() {\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\n\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\n            this._focusinEventSupported = !qq.firefox();\n\n            if (this._isEditFilenameEnabled())\n            {\n                this._filenameClickHandler = this._bindFilenameClickEvent();\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\n            }\n        },\n\n        _setupDragAndDrop: function() {\n            var self = this,\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\n                templating = this._templating,\n                defaultDropZone = templating.getDropZone();\n\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\n\n            return new qq.DragAndDrop({\n                dropZoneElements: dropZoneElements,\n                allowMultipleItems: this._options.multiple,\n                classes: {\n                    dropActive: this._options.classes.dropActive\n                },\n                callbacks: {\n                    processingDroppedFiles: function() {\n                        templating.showDropProcessing();\n                    },\n                    processingDroppedFilesComplete: function(files, targetEl) {\n                        templating.hideDropProcessing();\n\n                        qq.each(files, function(idx, file) {\n                            file.qqDropTarget = targetEl;\n                        });\n\n                        if (files.length) {\n                            self.addFiles(files, null, null);\n                        }\n                    },\n                    dropError: function(code, errorData) {\n                        self._itemError(code, errorData);\n                    },\n                    dropLog: function(message, level) {\n                        self.log(message, level);\n                    }\n                }\n            });\n        },\n\n        _bindFileButtonsClickEvent: function() {\n            var self = this;\n\n            return new qq.FileButtonsClickHandler({\n                templating: this._templating,\n\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n\n                onDeleteFile: function(fileId) {\n                    self.deleteFile(fileId);\n                },\n\n                onCancel: function(fileId) {\n                    self.cancel(fileId);\n                },\n\n                onRetry: function(fileId) {\n                    self.retry(fileId);\n                },\n\n                onPause: function(fileId) {\n                    self.pauseUpload(fileId);\n                },\n\n                onContinue: function(fileId) {\n                    self.continueUpload(fileId);\n                },\n\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                }\n            });\n        },\n\n        _isEditFilenameEnabled: function() {\n            /*jshint -W014 */\n            return this._templating.isEditFilenamePossible()\n                && !this._options.autoUpload\n                && qq.FilenameClickHandler\n                && qq.FilenameInputFocusHandler\n                && qq.FilenameInputFocusHandler;\n        },\n\n        _filenameEditHandler: function() {\n            var self = this,\n                templating = this._templating;\n\n            return {\n                templating: templating,\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n                onGetUploadStatus: function(fileId) {\n                    return self.getUploads({id: fileId}).status;\n                },\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                },\n                onSetName: function(id, newName) {\n                    self.setName(id, newName);\n                },\n                onEditingStatusChange: function(id, isEditing) {\n                    var qqInput = qq(templating.getEditInput(id)),\n                        qqFileContainer = qq(templating.getFileContainer(id));\n\n                    if (isEditing) {\n                        qqInput.addClass(\"qq-editing\");\n                        templating.hideFilename(id);\n                        templating.hideEditIcon(id);\n                    }\n                    else {\n                        qqInput.removeClass(\"qq-editing\");\n                        templating.showFilename(id);\n                        templating.showEditIcon(id);\n                    }\n\n                    // Force IE8 and older to repaint\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\n                }\n            };\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\n\n            if (this._isEditFilenameEnabled()) {\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\n                    this._templating.markFilenameEditable(id);\n                    this._templating.hideEditIcon(id);\n                }\n            }\n\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\n                this._templating.hideRetry(id);\n                this._templating.setStatusText(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\n            }\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\n                this._templating.hidePause(id);\n            }\n        },\n\n        _bindFilenameInputFocusInEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusInHandler(spec);\n        },\n\n        _bindFilenameInputFocusEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusHandler(spec);\n        },\n\n        _bindFilenameClickEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameClickHandler(spec);\n        },\n\n        _storeForLater: function(id) {\n            this._parent.prototype._storeForLater.apply(this, arguments);\n            this._templating.hideSpinner(id);\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._parent.prototype._onAllComplete.apply(this, arguments);\n            this._templating.resetTotalProgress();\n        },\n\n        _onSubmit: function(id, name) {\n            var file = this.getFile(id);\n\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\n                this._paramsStore.addReadOnly(id, {\n                    qqpath: file.qqPath\n                });\n            }\n\n            this._parent.prototype._onSubmit.apply(this, arguments);\n            this._addToList(id, name);\n        },\n\n        // The file item has been added to the DOM.\n        _onSubmitted: function(id) {\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\n            if (this._isEditFilenameEnabled()) {\n                this._templating.markFilenameEditable(id);\n                this._templating.showEditIcon(id);\n\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\n                if (!this._focusinEventSupported) {\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\n                }\n            }\n        },\n\n        // Update the progress bar & percentage as the file is uploaded\n        _onProgress: function(id, name, loaded, total) {\n            this._parent.prototype._onProgress.apply(this, arguments);\n\n            this._templating.updateProgress(id, loaded, total);\n\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\n                this._templating.hideCancel(id);\n                this._templating.hidePause(id);\n                this._templating.hideProgress(id);\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\n\n                // If ~last byte was sent, display total file size\n                this._displayFileSize(id);\n            }\n            else {\n                // If still uploading, display percentage - total size is actually the total request(s) size\n                this._displayFileSize(id, loaded, total);\n            }\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\n            this._templating.updateTotalProgress(loaded, total);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\n                templating = this._templating,\n                fileContainer = templating.getFileContainer(id),\n                self = this;\n\n            function completeUpload(result) {\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\n                // If so, don't perform any UI-related tasks related to this file.\n                if (!fileContainer) {\n                    return;\n                }\n\n                templating.setStatusText(id);\n\n                qq(fileContainer).removeClass(self._classes.retrying);\n                templating.hideProgress(id);\n\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\n                    templating.hideCancel(id);\n                }\n                templating.hideSpinner(id);\n\n                if (result.success) {\n                    self._markFileAsSuccessful(id);\n                }\n                else {\n                    qq(fileContainer).addClass(self._classes.fail);\n                    templating.showCancel(id);\n\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\n                        qq(fileContainer).addClass(self._classes.retryable);\n                        templating.showRetry(id);\n                    }\n                    self._controlFailureTextDisplay(id, result);\n                }\n            }\n\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\n            if (parentRetVal instanceof qq.Promise) {\n                parentRetVal.done(function(newResult) {\n                    completeUpload(newResult);\n                });\n\n            }\n            else {\n                completeUpload(result);\n            }\n\n            return parentRetVal;\n        },\n\n        _markFileAsSuccessful: function(id) {\n            var templating = this._templating;\n\n            if (this._isDeletePossible()) {\n                templating.showDeleteButton(id);\n            }\n\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\n\n            this._maybeUpdateThumbnail(id);\n        },\n\n        _onUploadPrep: function(id) {\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\n            this._templating.showSpinner(id);\n        },\n\n        _onUpload: function(id, name) {\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\n\n            this._templating.showSpinner(id);\n\n            return parentRetVal;\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\n\n            // Only display the pause button if we have finished uploading at least one chunk\n            // & this file can be resumed\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\n                this._templating.allowPause(id);\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._parent.prototype._onCancel.apply(this, arguments);\n            this._removeFileItem(id);\n\n            if (this._getNotFinished() === 0) {\n                this._templating.resetTotalProgress();\n            }\n        },\n\n        _onBeforeAutoRetry: function(id) {\n            var retryNumForDisplay, maxAuto, retryNote;\n\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\n\n            this._showCancelLink(id);\n\n            if (this._options.retry.showAutoRetryNote) {\n                retryNumForDisplay = this._autoRetries[id];\n                maxAuto = this._options.retry.maxAutoAttempts;\n\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\n\n                this._templating.setStatusText(id, retryNote);\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\n            }\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\n                this._templating.resetProgress(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\n                this._templating.setStatusText(id);\n                this._templating.showSpinner(id);\n                this._showCancelLink(id);\n                return true;\n            }\n            else {\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\n                this._templating.showRetry(id);\n                return false;\n            }\n        },\n\n        _onSubmitDelete: function(id) {\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\n\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\n        },\n\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\n            if (this._options.deleteFile.forceConfirm) {\n                this._showDeleteConfirm.apply(this, arguments);\n            }\n            else {\n                this._sendDeleteRequest.apply(this, arguments);\n            }\n        },\n\n        _onDeleteComplete: function(id, xhr, isError) {\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\n\n            this._templating.hideSpinner(id);\n\n            if (isError) {\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\n                this._templating.showDeleteButton(id);\n            }\n            else {\n                this._removeFileItem(id);\n            }\n        },\n\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\n            this._templating.hideDeleteButton(id);\n            this._templating.showSpinner(id);\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\n            this._deleteHandler.sendDelete.apply(this, arguments);\n        },\n\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\n            /*jshint -W004 */\n            var fileName = this.getName(id),\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\n                uuid = this.getUuid(id),\n                deleteRequestArgs = arguments,\n                self = this,\n                retVal;\n\n            retVal = this._options.showConfirm(confirmMessage);\n\n            if (qq.isGenericPromise(retVal)) {\n                retVal.then(function() {\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\n                });\n            }\n            else if (retVal !== false) {\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\n            }\n        },\n\n        _addToList: function(id, name, canned) {\n            var prependData,\n                prependIndex = 0,\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\n                record;\n\n            if (this._options.display.prependFiles) {\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\n                    prependIndex = this._filesInBatchAddedToUi - 1;\n                }\n\n                prependData = {\n                    index: prependIndex\n                };\n            }\n\n            if (!canned) {\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\n                    this._templating.disableCancel();\n                }\n\n                // Cancel all existing (previous) files and clear the list if this file is not part of\n                // a scaled file group that has already been accepted, or if this file is not part of\n                // a scaled file group at all.\n                if (!this._options.multiple) {\n                    record = this.getUploads({id: id});\n\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\n\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\n                        this._handler.cancelAll();\n                        this._clearList();\n                        this._handledProxyGroup = null;\n                    }\n                }\n            }\n\n            if (canned) {\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\n            }\n            else {\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\n            }\n\n            this._filesInBatchAddedToUi += 1;\n\n            if (canned ||\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\n\n                this._displayFileSize(id);\n            }\n        },\n\n        _clearList: function() {\n            this._templating.clearFiles();\n            this.clearStoredFiles();\n        },\n\n        _displayFileSize: function(id, loadedSize, totalSize) {\n            var size = this.getSize(id),\n                sizeForDisplay = this._formatSize(size);\n\n            if (size >= 0) {\n                if (loadedSize !== undefined && totalSize !== undefined) {\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\n                }\n\n                this._templating.updateSize(id, sizeForDisplay);\n            }\n        },\n\n        _formatProgress: function(uploadedSize, totalSize) {\n            var message = this._options.text.formatProgress;\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\n            r(\"{total_size}\", this._formatSize(totalSize));\n            return message;\n        },\n\n        _controlFailureTextDisplay: function(id, response) {\n            var mode, responseProperty, failureReason;\n\n            mode = this._options.failedUploadTextDisplay.mode;\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\n\n            if (mode === \"custom\") {\n                failureReason = response[responseProperty];\n                if (!failureReason) {\n                    failureReason = this._options.text.failUpload;\n                }\n\n                this._templating.setStatusText(id, failureReason);\n\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\n                    this._showTooltip(id, failureReason);\n                }\n            }\n            else if (mode === \"default\") {\n                this._templating.setStatusText(id, this._options.text.failUpload);\n            }\n            else if (mode !== \"none\") {\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\n            }\n        },\n\n        _showTooltip: function(id, text) {\n            this._templating.getFileContainer(id).title = text;\n        },\n\n        _showCancelLink: function(id) {\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\n                this._templating.showCancel(id);\n            }\n        },\n\n        _itemError: function(code, name, item) {\n            var message = this._parent.prototype._itemError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _batchError: function(message) {\n            this._parent.prototype._batchError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _setupPastePrompt: function() {\n            var self = this;\n\n            this._options.callbacks.onPasteReceived = function() {\n                var message = self._options.paste.namePromptMessage,\n                    defaultVal = self._options.paste.defaultName;\n\n                return self._options.showPrompt(message, defaultVal);\n            };\n        },\n\n        _fileOrBlobRejected: function(id, name) {\n            this._totalFilesInBatch -= 1;\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            this._totalFilesInBatch = items.length;\n            this._filesInBatchAddedToUi = 0;\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\n        },\n\n        _maybeUpdateThumbnail: function(fileId) {\n            var thumbnailUrl = this._thumbnailUrls[fileId],\n                fileStatus = this.getUploads({id: fileId}).status;\n\n            if (fileStatus !== qq.status.DELETED &&\n                (thumbnailUrl ||\n                this._options.thumbnails.placeholders.waitUntilResponse ||\n                !qq.supportedFeatures.imagePreviews)) {\n\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\n                // if called with a null thumbnailUrl.\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\n\n            this._addToList(id, this.getName(id), true);\n            this._templating.hideSpinner(id);\n            this._templating.hideCancel(id);\n            this._markFileAsSuccessful(id);\n\n            return id;\n        },\n\n        _setSize: function(id, newSize) {\n            this._parent.prototype._setSize.apply(this, arguments);\n\n            this._templating.updateSize(id, this._formatSize(newSize));\n        },\n\n        _sessionRequestComplete: function() {\n            this._templating.addCacheToDom();\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateDom,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListEl,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListEl = fileListNode.children[0].cloneNode(true);\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: tempTemplateEl,\n                fileTemplate: fileListEl\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateDom = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.appendChild(templateDom.template.cloneNode(true));\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            container.innerHTML = \"\";\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = templateDom.fileTemplate.cloneNode(true),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n","/*globals qq */\n/**\n * This defines FineUploader mode w/ support for uploading to Azure, which provides all the basic\n * functionality of Fine Uploader as well as code to handle uploads directly to Azure.\n * This module inherits all logic from UI & core mode and adds some UI-related logic\n * specific to the upload-to-Azure workflow.  Some inherited options and API methods have a special meaning\n * in the context of the Azure uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.azure.FineUploader = function(o) {\n        var options = {\n            failedUploadTextDisplay: {\n                mode: \"custom\"\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Inherit instance data from FineUploader, which should in turn inherit from azure.FineUploaderBasic.\n        qq.FineUploader.call(this, options, \"azure\");\n    };\n\n    // Inherit the API methods from FineUploaderBasicS3\n    qq.extend(qq.azure.FineUploader.prototype, qq.azure.FineUploaderBasic.prototype);\n\n    // Inherit public and private API methods related to UI\n    qq.extend(qq.azure.FineUploader.prototype, qq.uiPublicApi);\n    qq.extend(qq.azure.FineUploader.prototype, qq.uiPrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.azure.FineUploader.prototype, {\n    });\n}());\n"]}